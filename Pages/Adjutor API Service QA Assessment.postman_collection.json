{
	"info": {
		"_postman_id": "8370d555-54c1-4222-aa62-4f01a8135f93",
		"name": "Adjutor API Service QA Assessment",
		"description": "Adjutor is the API service from Lendsqr provided via RESTful APIs. The services include the following:\n\n- Authorizing direct debit, with consent, for repayments\n    \n- Getting the bank accounts, with consent, tied to a customer's BVN\n    \n- Matching a customer image against what's on their BVN\n    \n- Getting the name and details of a bank account number\n    \n- Getting credit information about a borrower\n    \n- Getting \"probable\" fraud information from our Karma blacklist\n    \n- Accessing credit performance information, for a borrower, from the Lendsqr ecosystem\n    \n\n## Getting Started\n\nTo have access to our APIs is easy.\n\n1. [Sign up for a Lendsqr Adjutor account](https://app.adjutor.io/signup?source=adjutor-api-documentation)\n    \n2. Then create an app and select the services required fror the app\n    \n\n## Terms of Use\n\nTo use Lendsqr Adjutor APIs, you must agree to our terms of use. These terms outline the conditions under which you may access and use our API. Please review these terms carefully before using our API. If you have any questions or concerns about these terms, please contact us at [api@lendsqr.com](https://mailto:api@lendsqr.com).\n\n[You read about our terms here](https://adjutor.io/legal/terms-of-use).\n\n## Getting Support\n\nIf you require assistance at any time when using this documentation or the services, please email [api@lendsqr.com](https://mailto:api@lendsqr.com) and someone would be in touch with you as soon as possible. If you are currently using Lendsqr to lend, you can also contact your account manager at [growth@lendsqr.com](https://mailto:growth@lendsqr.com).\n\n---\n\n# Authentication\n\nAuthentication to the Adjutor API service is performed with the API key. Every endpoint requires authentication, so you will need to add the following header to each request:\n\n`Authorization: Bearer`\n\n`base_url: https://adjutor.lendsqr.com/v2/`\n\n---\n\n# Data Types\n\nAll of the API responses returned are in JSON format, with these data types defined below:\n\n| Type | Description |\n| --- | --- |\n| `string` | A UTF-8 encoded string |\n| `number` | An integer |\n| `datetime` | An ISO8601 encoded DateTime. All datetimes are returned in UTC with offset +00:00 |\n| `decimal` | All monetary values are returned with up to two decimal places and may be positive (20.78) or negative (-32.50) |\n\n# Data Length\n\n| Type | Description | Length |\n| --- | --- | --- |\n| Text fields | `string` | max-length 255 characters |\n| BVN | `integers` starting with 1 or 2 | 11 digits. |\n| Account Number | `integers` | 10 digits. |\n\n---\n\n# Response\n\n| Field | Type | Description |\n| --- | --- | --- |\n| data | `array` | The actual data items you have requested |\n| meta | `object` | Key/value information that is not essential to understanding the resources returned but offers additional detail |\n\n# Meta\n\n| Field | Type | Description |\n| --- | --- | --- |\n| cost | `number` | The cost for the API call in Naira |\n| balance | `number` | The remaining balance in your service wallet in Naira |\n\n---\n\n# Errors\n\nErrors are expressed as a combination of HTTP status codes and an accompanying JSON body providing required detail where possible. You should be able to rely on the HTTP status code alone to determine the cause of the problem.\n\n## Error Response Fields\n\n| Field | Type |\n| --- | --- |\n| message | `string` A human-readable message as to the specifics of the problem. For example, it may contain a detail description of what caused the problem |\n| status number | The HTTP status code used in the response |\n| error_code | `number` |\n\n---",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "32444128"
	},
	"item": [
		{
			"name": "Validation",
			"item": [
				{
					"name": "Get Accounts for a BVN",
					"item": [
						{
							"name": "Initialize BVN Accounts Consent",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const responseJson = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 1000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});\r",
											"\r",
											"pm.test('Response body contains correct terms', function () {\r",
											"    pm.expect(pm.response.text()).to.include('status');\r",
											"    pm.expect(pm.response.text()).to.include('data');\r",
											"    pm.expect(pm.response.text()).to.include('message');\r",
											"    pm.expect(pm.response.text()).to.include('meta');\r",
											"    pm.expect(pm.response.text()).to.include('cost');\r",
											"    pm.expect(pm.response.text()).to.include('balance');\r",
											"});\r",
											"\r",
											"pm.test(\"The response has the expected data types\", function(){\r",
											"    pm.expect(responseJson.status).to.be.a('string');\r",
											"    m.expect(responseJson.message).to.be.a('string');\r",
											"    pm.expect(responseJson.data).to.be.a('string');\r",
											"    pm.expect(responseJson.meta).to.be.an('object');\r",
											"    pm.expect(responseJson.meta.cost).to.be.a('number');\r",
											"    pm.expect(responseJson.meta.balance).to.be.a('number');\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"contact\": \"09139379743\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}verification/bvn/:bvn/accounts",
									"host": [
										"{{base_url}}verification"
									],
									"path": [
										"bvn",
										":bvn",
										"accounts"
									],
									"variable": [
										{
											"key": "bvn",
											"value": "22171595075"
										}
									]
								},
								"description": "This endpoint is used to initiate the process for getting customer consent. The integrator is required to pass the customer's BVN and the phone number.\n\n**If the phone number passed does not match the customer phone on record, an error is returned but with a masked collection of the correct phone and email on the customer account.**\n\n``` json\n{\n  \"status\": \"otp\",\n  \"message\": \"Please provide OTP sent to contact\",\n  \"data\": \"ado****@example.com\",\n  \"meta\": {\n    \"cost\": 0,\n    \"balance\": 4735\n  }\n}\n\n ```\n\n#### Request Body\n\n| Field | Type | Description |\n| --- | --- | --- |\n| contact | `String` | The phone number or email of the customer. At the minimum, the phone number must be the one registered to the BVN (e.g., 08012345678, [ado@example.com](https://mailto:ado@example.com)). |"
							},
							"response": [
								{
									"name": "Initialize BVN Accounts",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"contact\": \"ado****@example.com\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://adjutor.lendsqr.com/v2/verification/bvn/:bvn/accounts",
											"protocol": "https",
											"host": [
												"adjutor",
												"lendsqr",
												"com"
											],
											"path": [
												"v2",
												"verification",
												"bvn",
												":bvn",
												"accounts"
											],
											"variable": [
												{
													"key": "bvn",
													"value": ""
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Wed, 21 Feb 2024 07:17:45 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "X-Request-ID",
											"value": "83e56b5f-fa1e-40d6-a987-79e05cee8fa8"
										},
										{
											"key": "Last-Modified",
											"value": "Wed, 21 Feb 2024 07:17:30 GMT"
										},
										{
											"key": "ETag",
											"value": "W/\"86-slc23G5+RJfJHR9MiSZECE5kUCk\""
										},
										{
											"key": "CF-Cache-Status",
											"value": "DYNAMIC"
										},
										{
											"key": "Server",
											"value": "cloudflare"
										},
										{
											"key": "CF-RAY",
											"value": "858d35bfa8556622-AMS"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip"
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": \"otp\",\n    \"message\": \"Please provide OTP sent to contact\",\n    \"data\": \"ado****@example.com\",\n    \"meta\": {\n        \"cost\": 0,\n        \"balance\": 4735\n    }\n}"
								}
							]
						},
						{
							"name": "Complete Consent and Get BVN Accounts",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const responseJson = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 1000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});\r",
											"\r",
											"pm.test('Response body contains correct terms', function () {\r",
											"    pm.expect(pm.response.text()).to.include('status');\r",
											"    pm.expect(pm.response.text()).to.include('data');\r",
											"    pm.expect(pm.response.text()).to.include('message');\r",
											"    pm.expect(pm.response.text()).to.include('account_name');\r",
											"    pm.expect(pm.response.text()).to.include('account_number');\r",
											"    pm.expect(pm.response.text()).to.include('bank_name');\r",
											"    pm.expect(pm.response.text()).to.include('bank_code');\r",
											"    pm.expect(pm.response.text()).to.include('account_status');\r",
											"    pm.expect(pm.response.text()).to.include('account_designation');\r",
											"    pm.expect(pm.response.text()).to.include('account_type');\r",
											"    pm.expect(pm.response.text()).to.include('meta');\r",
											"    pm.expect(pm.response.text()).to.include('cost');\r",
											"    pm.expect(pm.response.text()).to.include('balance');\r",
											"});\r",
											"\r",
											"pm.test(\"The response has the expected data types\", function(){\r",
											"    pm.expect(responseJson.status).to.be.a('string');\r",
											"    pm.expect(responseJson.message).to.be.a('string');\r",
											"    pm.expect(responseJson.data).to.be.an('array');\r",
											"    for (let i = 0; i < responseJson.data; i++) {\r",
											"        pm.expect(responseJson.data[i].account_name).to.be.a('string');\r",
											"        pm.expect(responseJson.data[i].account_number).to.be.a('string');\r",
											"        pm.expect(responseJson.data[i].bank_name).to.be.a('string');\r",
											"        pm.expect(responseJson.data[i].bank_code).to.be.a('string');\r",
											"        pm.expect(responseJson.data[i].account_status).to.be.a('number');\r",
											"        pm.expect(responseJson.data[i].account_designation).to.be.a('string');\r",
											"        pm.expect(responseJson.data[i].account_type).to.be.a('string');\r",
											"    }\r",
											"    pm.expect(responseJson.meta).to.be.an('object');\r",
											"    pm.expect(responseJson.meta.cost).to.be.a('number');\r",
											"    pm.expect(responseJson.meta.balance).to.be.a('number');\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"otp\": \"470561\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}verification/bvn/:bvn/accounts",
									"host": [
										"{{base_url}}verification"
									],
									"path": [
										"bvn",
										":bvn",
										"accounts"
									],
									"variable": [
										{
											"key": "bvn",
											"value": "22171595075"
										}
									]
								},
								"description": "This endpoint is used to get the bank accounts. It requires the OTP that has been sent to the customer. OTP to phones are usually sent from PFAlert sender id.\n\n#### Request Body\n\n| Field | Type | Description |\n| --- | --- | --- |\n| otp | `string` | The one-time password for verification (e.g., \"477226\"). |\n\n#### Response Fields\n\n| Field | Type | Description |\n| --- | --- | --- |\n| account_name | `string` | The name of the account holder (e.g., \"ADO JOHN SULE\"). |\n| account_number | `string` | The unique number identifying the account (e.g., \"1234567890\"). |\n| bank_name | `string` | The name of the bank where the account is held (e.g., \"Access Bank Nigeria Plc\"). You can get the list of banks on the /banks endpoint. |\n| bank_code | `string` | The unique code identifying the bank (e.g., \"044\"). You can get the list of banks on the /banks endpoint. |\n| account_status | `string` | The status of the account (e.g., 1). Please see definition below. |\n| account_designation | `string` | The classification of the account holder (e.g., \"INDIVIDUAL\"). |\n| account_type | `string` | The type of account (e.g., \"SAVINGS\"). |\n\n#### Account Status\n\n| Status Code | Description |\n| --- | --- |\n| 1 | Active |\n| 2 | Dormant |\n| 3 | Closed |\n| 4 | PND (Post No Debit) |\n| 5 | PNC (Post No Credit) |\n| 6 | Inactive |\n| 7 | Total Freeze |\n| 8 | Other |"
							},
							"response": [
								{
									"name": "Complete BVN Accounts",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"otp\": \"998278\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://adjutor.lendsqr.com/v2/verification/bvn/:bvn/accounts",
											"protocol": "https",
											"host": [
												"adjutor",
												"lendsqr",
												"com"
											],
											"path": [
												"v2",
												"verification",
												"bvn",
												":bvn",
												"accounts"
											],
											"variable": [
												{
													"key": "bvn",
													"value": ""
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Wed, 21 Feb 2024 07:30:41 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "X-Request-ID",
											"value": "1f01b79c-6b20-4fb8-b25c-b20a4b6efd6d"
										},
										{
											"key": "Last-Modified",
											"value": "Wed, 21 Feb 2024 07:30:32 GMT"
										},
										{
											"key": "ETag",
											"value": "W/\"74c-DjqwVcI8TtyBwlth2OV3gLYKrlQ\""
										},
										{
											"key": "CF-Cache-Status",
											"value": "DYNAMIC"
										},
										{
											"key": "Server",
											"value": "cloudflare"
										},
										{
											"key": "CF-RAY",
											"value": "858d48d90a446622-AMS"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip"
										}
									],
									"cookie": [],
									"body": "{\n\t\"status\": \"success\",\n\t\"message\": \"Successful\",\n\t\"data\": [\n\t\t{\n\t\t\t\"account_name\": \"ADO JOHN SULE\",\n\t\t\t\"account_number\": \"9876543210\",\n\t\t\t\"bank_name\": \"GTBank\",\n\t\t\t\"bank_code\": \"058\",\n\t\t\t\"account_status\": 4,\n\t\t\t\"account_designation\": \"INDIVIDUAL\",\n\t\t\t\"account_type\": \"CURRENT\"\n\t\t},\n\t\t{\n\t\t\t\"account_name\": \"ADO JOHN SULE\",\n\t\t\t\"account_number\": \"1234567890\",\n\t\t\t\"bank_name\": \"Access Bank Nigeria Plc\",\n\t\t\t\"bank_code\": \"044\",\n\t\t\t\"account_status\": 1,\n\t\t\t\"account_designation\": \"INDIVIDUAL\",\n\t\t\t\"account_type\": \"SAVINGS\"\n\t\t}\n\t],\n\t\"meta\": {\n\t\t\"cost\": 20,\n\t\t\"balance\": 4735\n\t}\n}\n"
								}
							]
						}
					]
				}
			],
			"description": "The Validation APIs are resources and tools for validating customer information. These validation processes make use of APIs that allow you to confirm the accuracy of customer information using their Bank Verification Numbers (BVNs), email addresses, or phone numbers.\n\nThe APIs are designed to help you ensure that customer information is accurate and up-to-date, providing you with a reliable and efficient method for validating customer data."
		},
		{
			"name": "Credit Bureaus",
			"item": [
				{
					"name": "Get Credit Report from CRC Credit Bureau",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});\r",
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Content-Type is JSON\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{base_url}}creditbureaus/crc/:bvn",
							"host": [
								"{{base_url}}creditbureaus"
							],
							"path": [
								"crc",
								":bvn"
							],
							"variable": [
								{
									"key": "bvn",
									"value": "22171595075",
									"description": "This must be a valid Bank Verification Number"
								}
							]
						},
						"description": "This request is used to check the CRC database for the credit history of a customer using their BVN.\n\n#### Path Variables\n\n`bvn`: `required` The BVN of the customer."
					},
					"response": [
						{
							"name": "Get Credit Report from CRC Credit Bureau",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{base_url}}creditbureaus/crc/:bvn",
									"host": [
										"{{base_url}}creditbureaus"
									],
									"path": [
										"crc",
										":bvn"
									],
									"variable": [
										{
											"key": "bvn",
											"value": "22293381111"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 08 Aug 2023 14:45:13 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "X-Request-ID",
									"value": "b0a64f17-3b9c-486a-bcd9-238c74c8dc6b"
								},
								{
									"key": "Last-Modified",
									"value": "Tue, 08 Aug 2023 14:45:11 GMT"
								},
								{
									"key": "ETag",
									"value": "W/\"3a9-O71eH/thvISxq/G7zT9AeNi1Bl4\""
								},
								{
									"key": "CF-Cache-Status",
									"value": "DYNAMIC"
								},
								{
									"key": "Server",
									"value": "cloudflare"
								},
								{
									"key": "CF-RAY",
									"value": "7f388aa9590fc4fc-LOS"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"success\",\n    \"message\": \"Successful\",\n    \"data\": {\n        \"consdisclaimer\": {\n            \"getdisclaimercontent\": {\n                \"_x0031_\": \"1\"\n            }\n        },\n        \"consumer_relation\": \"\",\n        \"last_checked_date\": \"2023-06-29 12:00:40\",\n        \"credit_nano_summary\": {\n            \"summary\": {\n                \"last_reported_date\": \"31-MAY-2023\",\n                \"has_creditfacilities\": \"YES\",\n                \"no_of_delinqcreditfacilities\": \"2\"\n            }\n        },\n        \"mfcredit_nano_summary\": {\n            \"summary\": {\n                \"last_reported_date\": \"31-MAY-2023\",\n                \"has_creditfacilities\": \"YES\",\n                \"no_of_delinqcreditfacilities\": \"1\"\n            }\n        },\n        \"mgcredit_nano_summary\": {\n            \"summary\": {\n                \"has_creditfacilities\": \"NO\",\n                \"no_of_delinqcreditfacilities\": \"0\"\n            }\n        },\n        \"nano_consumer_profile\": {\n            \"consumer_details\": {\n                \"name\": \"JOHN DOE\",\n                \"ruid\": \"1112020002201111\",\n                \"gender\": \"001\",\n                \"last_name\": \"DOE\",\n                \"first_name\": \"JOHN\",\n                \"citizenship\": \"NG\",\n                \"date_of_birth\": \"01-OCT-1960\",\n                \"identification\": {\n                    \"ruid\": \"1112020002201111\",\n                    \"id_value\": \"22293381111\",\n                    \"source_id\": \"BVN\",\n                    \"id_display_name\": \"Business Verification Number\"\n                }\n            }\n        }\n    },\n    \"meta\": {\n        \"cost\": 100,\n        \"balance\": 1355\n    }\n}"
						}
					]
				},
				{
					"name": "Get Credit Report from FirstCentral Credit Bureau",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});\r",
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Content-Type is JSON\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}creditbureaus/firstcentral/:bvn",
							"host": [
								"{{base_url}}creditbureaus"
							],
							"path": [
								"firstcentral",
								":bvn"
							],
							"variable": [
								{
									"key": "bvn",
									"value": "22171595075",
									"description": "This must be a valid Bank Verification Number"
								}
							]
						},
						"description": "This request is used to check the CRC database for the credit history of a customer using their BVN.\n\n#### Path Variables\n\n`bvn`: `required` The BVN of the customer."
					},
					"response": [
						{
							"name": "Get Credit Report from FirstCentral Credit Bureau",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}creditbureaus/firstcentral/:bvn",
									"host": [
										"{{base_url}}creditbureaus"
									],
									"path": [
										"firstcentral",
										":bvn"
									],
									"variable": [
										{
											"key": "bvn",
											"value": "22293381111"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Mon, 14 Aug 2023 13:26:10 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "X-Request-ID",
									"value": "215fcd37-0d7f-4fc8-9031-7fa20e55bad0"
								},
								{
									"key": "Last-Modified",
									"value": "Mon, 14 Aug 2023 13:26:10 GMT"
								},
								{
									"key": "ETag",
									"value": "W/\"5da-eIapFMBHh+VQsgkRqx4HYnwZad4\""
								},
								{
									"key": "CF-Cache-Status",
									"value": "DYNAMIC"
								},
								{
									"key": "Server",
									"value": "cloudflare"
								},
								{
									"key": "CF-RAY",
									"value": "7f698727981103d6-LIS"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"success\",\n    \"message\": \"Successful\",\n    \"data\": [\n        {\n            \"SubjectList\": [\n                {\n                    \"Reference\": \"2663443\",\n                    \"ConsumerID\": \"2663443\",\n                    \"SearchOutput\": \"DOE JANE, dantata estate kubwa abuja\"\n                }\n            ]\n        },\n        {\n            \"PersonalDetailsSummary\": [\n                {\n                    \"Gender\": \"Female\",\n                    \"Header\": \"PERSONAL DETAILS SUMMARY: DOE JANE\",\n                    \"Surname\": \"DOE\",\n                    \"BirthDate\": \"19/03/1997\",\n                    \"FirstName\": \"JANE\",\n                    \"OtheridNo\": \"\",\n                    \"CellularNo\": \"2348169591111\",\n                    \"ConsumerID\": \"2663443\",\n                    \"Dependants\": \"0\",\n                    \"OtherNames\": \"\",\n                    \"PassportNo\": null,\n                    \"PencomIDNo\": \"\",\n                    \"Nationality\": \"Nigeria\",\n                    \"ReferenceNo\": null,\n                    \"EmailAddress\": \"\",\n                    \"NationalIDNo\": \"\",\n                    \"MaritalStatus\": null,\n                    \"EmployerDetail\": null,\n                    \"PostalAddress1\": \"DANTATA ESTATE ABUJA FEDERAL CAPITAL TERRITORY\",\n                    \"PostalAddress2\": \"15\",\n                    \"PostalAddress3\": \"\",\n                    \"PostalAddress4\": \" Nigeria\",\n                    \"HomeTelephoneNo\": \"2348169591111\",\n                    \"WorkTelephoneNo\": \"2348169591111\",\n                    \"DriversLicenseNo\": null,\n                    \"PropertyOwnedType\": \"\",\n                    \"BankVerificationNo\": \"22293381111\",\n                    \"ResidentialAddress1\": \"10nasiru dantata estate kubwa abuja\",\n                    \"ResidentialAddress2\": \"\",\n                    \"ResidentialAddress3\": \"\",\n                    \"ResidentialAddress4\": \" \"\n                }\n            ]\n        },\n        {\n            \"CreditSummary\": [\n                {\n                    \"NumberofAccountsInBadStanding\": \"0\",\n                    \"TotalNumberOfAccountsReported\": \"6\",\n                    \"NumberOfAccountsInGoodStanding\": \"6\"\n                }\n            ]\n        },\n        {\n            \"PerformanceClassification\": [\n                {\n                    \"NoOfLoansLost\": \"0\",\n                    \"NoOfLoansDoubtful\": \"0\",\n                    \"NoOfLoansPerforming\": \"6\",\n                    \"NoOfLoansSubstandard\": \"1\"\n                }\n            ]\n        },\n        {\n            \"EnquiryDetails\": [\n                {\n                    \"ProductID\": \"63\",\n                    \"MatchingRate\": \"90\",\n                    \"SubscriberEnquiryEngineID\": \"179484634\",\n                    \"SubscriberEnquiryResultID\": \"22059650\"\n                }\n            ]\n        }\n    ],\n    \"meta\": {\n        \"cost\": 100,\n        \"balance\": 1025\n    }\n}"
						}
					]
				}
			],
			"description": "The Credit Bureaus folder contains resources and tools for accessing credit information through credit bureau integrations."
		},
		{
			"name": "Decisioning",
			"item": [
				{
					"name": "Get Decision Models",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});\r",
									"\r",
									"pm.test('Response body contains correct terms', function () {\r",
									"    pm.expect(pm.response.text()).to.include('status');\r",
									"    pm.expect(pm.response.text()).to.include('message');\r",
									"    pm.expect(pm.response.text()).to.include('data');\r",
									"    pm.expect(pm.response.text()).to.include('id');\r",
									"    pm.expect(pm.response.text()).to.include('product_id');\r",
									"    pm.expect(pm.response.text()).to.include('org_id');\r",
									"    pm.expect(pm.response.text()).to.include('version_i');\r",
									"    pm.expect(pm.response.text()).to.include('country');\r",
									"    pm.expect(pm.response.text()).to.include('name');\r",
									"    pm.expect(pm.response.text()).to.include('description');\r",
									"    pm.expect(pm.response.text()).to.include('decision_setting');\r",
									"    pm.expect(pm.response.text()).to.include('karma');\r",
									"    pm.expect(pm.response.text()).to.include('required');\r",
									"    pm.expect(pm.response.text()).to.include('sequence');\r",
									"    pm.expect(pm.response.text()).to.include('continue_on_failure');\r",
									"    pm.expect(pm.response.text()).to.include('pre_offer');\r",
									"    pm.expect(pm.response.text()).to.include('ecosystem');\r",
									"    pm.expect(pm.response.text()).to.include('credit_bureau');\r",
									"    pm.expect(pm.response.text()).to.include('offer_setting');\r",
									"    pm.expect(pm.response.text()).to.include('rule');\r",
									"    pm.expect(pm.response.text()).to.include('*');\r",
									"    pm.expect(pm.response.text()).to.include('var');\r",
									"    pm.expect(pm.response.text()).to.include('maximum');\r",
									"    pm.expect(pm.response.text()).to.include('minimum');\r",
									"    pm.expect(pm.response.text()).to.include('status');\r",
									"    pm.expect(pm.response.text()).to.include('created_on');\r",
									"});\r",
									"\r",
									"pm.test(\"The response has the expected data types\", function(){\r",
									"    pm.expect(responseJson.status).to.be.a('string');\r",
									"    pm.expect(responseJson.message).to.be.a('string');\r",
									"    pm.expect(responseJson.data).to.be.an('array');\r",
									"    for (let i = 0; i < responseJson.data; i++) {\r",
									"        pm.expect(responseJson.data[i].id).to.be.a('number');\r",
									"        // pm.expect(responseJson.data[i].product_id).to.be.a('string');\r",
									"        pm.expect(responseJson.data[i].org_id).to.be.a('number');\r",
									"        pm.expect(responseJson.data[i].version_id).to.be.a('number');\r",
									"        pm.expect(responseJson.data[i].country).to.be.a('string');\r",
									"        pm.expect(responseJson.data[i].name).to.be.a('string');\r",
									"        pm.expect(responseJson.data[i].decision_setting).to.be.an('object');\r",
									"        pm.expect(responseJson.data[i].decision_setting.karma).to.be.an('object');\r",
									"        pm.expect(responseJson.data[i].decision_setting.karma.required).to.be.a('boolean');\r",
									"        pm.expect(responseJson.data[i].decision_setting.karma.sequence).to.be.a('number');\r",
									"        pm.expect(responseJson.data[i].decision_setting.karma.continue_on_failure).to.be.a('boolean');\r",
									"        pm.expect(responseJson.data[i].decision_setting.karma.pre_offer).to.be.a('boolean');\r",
									"        pm.expect(responseJson.data[i].decision_setting.ecosystem).to.be.an('object');\r",
									"        pm.expect(responseJson.data[i].decision_setting.ecosystem.required).to.be.a('boolean');\r",
									"        pm.expect(responseJson.data[i].decision_setting.ecosystem.sequence).to.be.a('number');\r",
									"        pm.expect(responseJson.data[i].decision_setting.ecosystem.continue_on_failure).to.be.a('boolean');\r",
									"        pm.expect(responseJson.data[i].decision_setting.ecosystem.pre_offer).to.be.a('boolean');\r",
									"        pm.expect(responseJson.data[i].decision_setting).to.be.an('object');\r",
									"        pm.expect(responseJson.data[i].decision_setting.credit_bureau).to.be.an('object');\r",
									"        pm.expect(responseJson.data[i].decision_setting.credit_bureau.required).to.be.a('boolean');\r",
									"        pm.expect(responseJson.data[i].decision_setting.credit_bureau.sequence).to.be.a('number');\r",
									"        pm.expect(responseJson.data[i].decision_setting.credit_bureau.continue_on_failure).to.be.a('boolean');\r",
									"    }\r",
									"});\r",
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Content-Type is JSON\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}decisioning/models",
							"host": [
								"{{base_url}}decisioning"
							],
							"path": [
								"models"
							]
						},
						"description": "This endpoint fetches all the decision models that have been configured for your profile. This would allow you to programmatically iterate and select."
					},
					"response": []
				},
				{
					"name": "Get Decision Model Details",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});\r",
									"\r",
									"pm.test('Response body contains correct terms', function () {\r",
									"    pm.expect(pm.response.text()).to.include('status');\r",
									"    pm.expect(pm.response.text()).to.include('message');\r",
									"    pm.expect(pm.response.text()).to.include('data');\r",
									"    pm.expect(pm.response.text()).to.include('id');\r",
									"    pm.expect(pm.response.text()).to.include('product_id');\r",
									"    pm.expect(pm.response.text()).to.include('org_id');\r",
									"    pm.expect(pm.response.text()).to.include('version_i');\r",
									"    pm.expect(pm.response.text()).to.include('country');\r",
									"    pm.expect(pm.response.text()).to.include('name');\r",
									"    pm.expect(pm.response.text()).to.include('description');\r",
									"    pm.expect(pm.response.text()).to.include('decision_setting');\r",
									"    pm.expect(pm.response.text()).to.include('karma');\r",
									"    pm.expect(pm.response.text()).to.include('required');\r",
									"    pm.expect(pm.response.text()).to.include('sequence');\r",
									"    pm.expect(pm.response.text()).to.include('continue_on_failure');\r",
									"    pm.expect(pm.response.text()).to.include('pre_offer');\r",
									"    // pm.expect(pm.response.text()).to.include('ecosystem');\r",
									"    pm.expect(pm.response.text()).to.include('credit_bureau');\r",
									"    pm.expect(pm.response.text()).to.include('offer_setting');\r",
									"    pm.expect(pm.response.text()).to.include('rule');\r",
									"    pm.expect(pm.response.text()).to.include('*');\r",
									"    pm.expect(pm.response.text()).to.include('var');\r",
									"    pm.expect(pm.response.text()).to.include('maximum');\r",
									"    pm.expect(pm.response.text()).to.include('minimum');\r",
									"    pm.expect(pm.response.text()).to.include('status');\r",
									"    pm.expect(pm.response.text()).to.include('created_on');\r",
									"});\r",
									"\r",
									"pm.test(\"The response has the expected data types\", function(){\r",
									"    pm.expect(responseJson.status).to.be.a('string');\r",
									"    pm.expect(responseJson.message).to.be.a('string');\r",
									"    pm.expect(responseJson.data).to.be.an('object');\r",
									"    pm.expect(responseJson.data.id).to.be.a('number');\r",
									"    // pm.expect(responseJson.data.product_id).to.be.a('string');\r",
									"    pm.expect(responseJson.data.org_id).to.be.a('number');\r",
									"    pm.expect(responseJson.data.version_id).to.be.a('number');\r",
									"    pm.expect(responseJson.data.country).to.be.a('string');\r",
									"    pm.expect(responseJson.data.name).to.be.a('string');\r",
									"    pm.expect(responseJson.data.decision_setting).to.be.an('object');\r",
									"    pm.expect(responseJson.data.decision_setting.karma).to.be.an('object');\r",
									"    pm.expect(responseJson.data.decision_setting.karma.required).to.be.a('boolean');\r",
									"    pm.expect(responseJson.data.decision_setting.karma.sequence).to.be.a('number');\r",
									"    pm.expect(responseJson.data.decision_setting.karma.continue_on_failure).to.be.a('boolean');\r",
									"    pm.expect(responseJson.data.decision_setting.karma.pre_offer).to.be.a('boolean');\r",
									"    // pm.expect(responseJson.data.decision_setting.ecosystem).to.be.an('object');\r",
									"    // pm.expect(responseJson.data.decision_setting.ecosystem.required).to.be.a('boolean');\r",
									"    // pm.expect(responseJson.data.decision_setting.ecosystem.sequence).to.be.a('number');\r",
									"    // pm.expect(responseJson.data.decision_setting.ecosystem.continue_on_failure).to.be.a('boolean');\r",
									"    // pm.expect(responseJson.data.decision_setting.ecosystem.pre_offer).to.be.a('boolean');\r",
									"    pm.expect(responseJson.data.decision_setting).to.be.an('object');\r",
									"    pm.expect(responseJson.data.decision_setting.credit_bureau).to.be.an('object');\r",
									"    pm.expect(responseJson.data.decision_setting.credit_bureau.required).to.be.a('boolean');\r",
									"    pm.expect(responseJson.data.decision_setting.credit_bureau.sequence).to.be.a('number');\r",
									"    pm.expect(responseJson.data.decision_setting.credit_bureau.continue_on_failure).to.be.a('boolean');\r",
									"});\r",
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Content-Type is JSON\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}decisioning/models/:id/settings",
							"host": [
								"{{base_url}}decisioning"
							],
							"path": [
								"models",
								":id",
								"settings"
							],
							"variable": [
								{
									"key": "id",
									"value": "9940"
								}
							]
						},
						"description": "This endpoint is used to obtain the details of a Decision Model.\n\n#### Path Variables\n\n`id`: `required` The id of the decison model.decision"
					},
					"response": []
				}
			],
			"description": "These APIs provide quick, easy, and cost-effective solutions for making informed decisions during your loan decision processes, allowing you to make confident and efficient choices with ease.\n\nTo use the Decisioning APIs, you must have designed your decision models and configure them within the Lendsqr admin console."
		},
		{
			"name": "Embedded Loans and Payments",
			"item": [
				{
					"name": "Pay with wallet",
					"item": [
						{
							"name": "Initialize Payment",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const responseJson = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 1000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});\r",
											"\r",
											"pm.test('Response body contains correct terms', function () {\r",
											"    pm.expect(pm.response.text()).to.include('status');\r",
											"    pm.expect(pm.response.text()).to.include('message');\r",
											"    pm.expect(pm.response.text()).to.include('data');\r",
											"    pm.expect(pm.response.text()).to.include('reference');\r",
											"    pm.expect(pm.response.text()).to.include('url');\r",
											"});\r",
											"\r",
											"pm.test(\"The response has the expected data types\", function(){\r",
											"    pm.expect(responseJson.status).to.be.a('string');\r",
											"    pm.expect(responseJson.message).to.be.a('string');\r",
											"    pm.expect(responseJson.data).to.be.an('object');\r",
											"    pm.expect(responseJson.data.reference).to.be.a('string');\r",
											"    pm.expect(responseJson.data.url).to.be.a('string');\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is JSON\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer sk_test_5N5FcApMCqN0DsDH3r6Ve292Q2peJGC2ZIynMab0",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"amount\": 5000,\n    \"description\": \"Payment for beans, yam and egg\",\n    \"organization_id\": \"37a749d808e46495a8da1e5352d03cae\",\n    \"callback_url\": \"https://lendsqr.com\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}payments/initialize",
									"host": [
										"{{base_url}}payments"
									],
									"path": [
										"initialize"
									]
								},
								"description": "This endpoint generates the payment link that would open a web page that would allow customers to log into the lender's account and initiate the relevant payment.\n\nYou would provide us with a callback URL that would serve as a redirect for customers once payment has been made."
							},
							"response": [
								{
									"name": "Initialize Payment",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer sk_test_5N5FcApMCqN0DsDH3r6Ve292Q2peJGC2ZIynMab0",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"amount\": 5000,\n    \"description\": \"Payment for beans and egg\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}payments/initialize",
											"host": [
												"{{base_url}}payments"
											],
											"path": [
												"initialize"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "X-Request-ID",
											"value": "b90557c9-1497-414f-86b4-9f89d3361e52"
										},
										{
											"key": "Last-Modified",
											"value": "Sun, 23 Jul 2023 18:55:19 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "108"
										},
										{
											"key": "ETag",
											"value": "W/\"6c-IGmND8VHD+WKmPUjHpwPnBLnwk8\""
										},
										{
											"key": "Date",
											"value": "Sun, 23 Jul 2023 18:55:20 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"Successful\",\n    \"data\": {\n        \"reference\": \"9ZyuoKwn3ENs12YU\",\n        \"url\": \"9ZyuoKwn3ENs12YU\"\n    }\n}"
								}
							]
						},
						{
							"name": "Query Payment",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const responseJson = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 1000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});\r",
											"\r",
											"pm.test('Response body contains correct terms', function () {\r",
											"    pm.expect(pm.response.text()).to.include('status');\r",
											"    pm.expect(pm.response.text()).to.include('message');\r",
											"    pm.expect(pm.response.text()).to.include('data');\r",
											"    pm.expect(pm.response.text()).to.include('reference');\r",
											"    pm.expect(pm.response.text()).to.include('amount');\r",
											"    pm.expect(pm.response.text()).to.include('description');\r",
											"    pm.expect(pm.response.text()).to.include('callback_url');\r",
											"    pm.expect(pm.response.text()).to.include('created_on');\r",
											"});\r",
											"\r",
											"pm.test(\"The response has the expected data types\", function(){\r",
											"    pm.expect(responseJson.status).to.be.a('string');\r",
											"    pm.expect(responseJson.message).to.be.a('string');\r",
											"    pm.expect(responseJson.data).to.be.an('object');\r",
											"    pm.expect(responseJson.data.reference).to.be.a('string');\r",
											"    pm.expect(responseJson.data.amount).to.be.a('number');\r",
											"    pm.expect(responseJson.data.description).to.be.a('string');\r",
											"    pm.expect(responseJson.data.callback_url).to.be.a('string');\r",
											"    pm.expect(responseJson.data.created_on).to.be.a('string');\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is JSON\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer sk_test_5N5FcApMCqN0DsDH3r6Ve292Q2peJGC2ZIynMab0",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{base_url}}payments/:reference",
									"host": [
										"{{base_url}}payments"
									],
									"path": [
										":reference"
									],
									"variable": [
										{
											"key": "reference",
											"value": "e2ypD9xyT3t8vn6B"
										}
									]
								},
								"description": "This endpoint is used to query the details of the payment made."
							},
							"response": [
								{
									"name": "Query Payment",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer sk_test_5N5FcApMCqN0DsDH3r6Ve292Q2peJGC2ZIynMab0",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{base_url}}payments/9ZyuoKwn3ENs12YU",
											"host": [
												"{{base_url}}payments"
											],
											"path": [
												"9ZyuoKwn3ENs12YU"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "X-Request-ID",
											"value": "43840982-dee5-49a3-acda-4650c01a11cf"
										},
										{
											"key": "Last-Modified",
											"value": "Sun, 23 Jul 2023 18:56:43 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "369"
										},
										{
											"key": "ETag",
											"value": "W/\"171-zzSQFFLrRm98A9YAgrI4FQiBWHs\""
										},
										{
											"key": "Date",
											"value": "Sun, 23 Jul 2023 18:56:44 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"Successful\",\n    \"data\": {\n        \"id\": 3,\n        \"org_id\": 136,\n        \"distributor_id\": 2,\n        \"transaction_id\": null,\n        \"reference\": \"9ZyuoKwn3ENs12YU\",\n        \"amount\": 5000,\n        \"description\": \"Payment for beans and egg\",\n        \"callback_url\": null,\n        \"created_on\": \"2023-07-23T17:55:20.000Z\",\n        \"created_by\": null,\n        \"modified_on\": null,\n        \"modified_by\": null,\n        \"deleted_flag\": 0,\n        \"deleted_on\": null,\n        \"deleted_by\": null\n    }\n}"
								}
							]
						}
					],
					"description": "Our Pay with Wallet solution allows your customers to make payment for their purchases via various account holding platforms. This solution is viable to customers who have accounts with a lender, on the Lendsqr platform that is activated for this program."
				}
			],
			"description": "## Introduction\n\nEmbedded loans and payments offers third-party distributors with Lendsqr the option to offer loans and payment options to customers on their platform outside Lendsqr."
		},
		{
			"name": "Data for Lenders",
			"item": [
				{
					"name": "Options",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});\r",
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Content-Type is JSON\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}data/options",
							"host": [
								"{{base_url}}data"
							],
							"path": [
								"options"
							]
						},
						"description": "This endpoint is used to get the data options or sources available for a lender.\n\n#### Response Payload\n\n| Field | Type | Description |\n| --- | --- | --- |\n| name | `string` | \"Users\" |\n| description | `string` | \"Get details of all users that have signed up to the system. This may include users who have not completed their onboarding\" |\n| path | `string` | \"/users\" |"
					},
					"response": [
						{
							"name": "Data Options",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}data/options",
									"host": [
										"{{base_url}}data"
									],
									"path": [
										"options"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Wed, 28 Feb 2024 22:55:02 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "X-Request-ID",
									"value": "286bceb2-43a0-4cc6-a001-131f13a66e3c"
								},
								{
									"key": "Last-Modified",
									"value": "Wed, 28 Feb 2024 22:54:57 GMT"
								},
								{
									"key": "ETag",
									"value": "W/\"690-sCrGprb2Do2p61q0+9QpVPX9kU8\""
								},
								{
									"key": "CF-Cache-Status",
									"value": "DYNAMIC"
								},
								{
									"key": "Server",
									"value": "cloudflare"
								},
								{
									"key": "CF-RAY",
									"value": "85cc40948afa636a-LHR"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"data\": [\n        {\n            \"name\": \"Users\",\n            \"description\": \"Get details of all users that have signed up to the system. This may include users who have not completed their onboarding\",\n            \"path\": \"/users\"\n        },\n        {\n            \"name\": \"Loans\",\n            \"description\": \"Get details of all loans for any users. You can filter with user_id, status, and approved_on columns\",\n            \"path\": \"/loans\"\n        },\n        {\n            \"name\": \"Options\",\n            \"description\": \"List all available data options. To get the data for any path, please call with base_url/<path>\",\n            \"path\": \"/options\"\n        },\n        {\n            \"name\": \"Lenders\",\n            \"description\": \"Get the list of all the lenders within the system. Should not appear for anyone\",\n            \"path\": \"/lenders\"\n        },\n        {\n            \"name\": \"Loan analytics\",\n            \"description\": \"Analytics of loans for organization grouped by month. You can filter with the month column\",\n            \"path\": \"/analytics/loans\"\n        },\n        {\n            \"name\": \"Loans\",\n            \"description\": \"Get transactions for loans. You can filter data using the loan_id and created_on columns\",\n            \"path\": \"/loans/transactions\"\n        },\n        {\n            \"name\": \"Loans\",\n            \"description\": \"Get schedules for specific loans. You can filter data using the loan_id and created_on columns\",\n            \"path\": \"/loans/schedules\"\n        },\n        {\n            \"name\": \"Transactions\",\n            \"description\": \"Get details of all user transactions. You can filter data using the user_id column\",\n            \"path\": \"/transactions\"\n        },\n        {\n            \"name\": \"Top offers\",\n            \"description\": \"Get the list of top loan offers in the Lendsqr ecosystem.\",\n            \"path\": \"/lenders/top-offers\"\n        },\n        {\n            \"name\": \"Lenders loans\",\n            \"description\": \"Get the list of all the loans that all lenders in the Lendsqr ecosystem have\",\n            \"path\": \"/lenders/loans\"\n        },\n        {\n            \"name\": \"Cards\",\n            \"description\": \"Get details of all cards.\",\n            \"path\": \"/cards\"\n        },\n        {\n            \"name\": \"Bank Accounts\",\n            \"description\": \"Get details of all bank accounts.\",\n            \"path\": \"/bank-accounts\"\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Users",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});\r",
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Content-Type is JSON\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}data/users",
							"host": [
								"{{base_url}}data"
							],
							"path": [
								"users"
							]
						},
						"description": "| Field | Type | Description |\n| --- | --- | --- |\n| org_id | `integer` | 9999 |\n| organization | `string` | \"Example Lender\" |\n| id | `integer` | 44691 |\n| first_name | `string` | \"Ado\\`\" |\n| last_name | `string` | \"John Sule\" |\n| full_name | `string` | \"Ado John Sule\" |\n| phone_number | `string` | \"07062569817\" |\n| phone_number_hash | `string` | \"318c88a8e1fcfc049114e69128275b4d\" |\n| email | `string` | \"Ado@lendsqr.com\" |\n| bvn | `string` | \"21234567890\" |\n| bvn_phone_number | `string` | \"08012345678\" |\n| `date`_of_birth | `date` | \"1990-09-10\" |\n| age | `integer` | 26 |\n| gender | `string` | \"Female\" |\n| stage_id | `integer` | 6 |\n| stage | `string` | \"done\" |\n| photo_url | `string` | \"[https://image.url.com\"](https://image.url.com) |\n| mifos_client_id | `string` | \"41053\" |\n| client_id | `string` | \"41053\" |\n| savings_id | `string` | \"47197\" |\n| account_number | `string` | \"IDR000047197----------\" |\n| account_balance | `float` | 1144.25 |\n| account_name | `string` | \"Ado John Sule\" |\n| referral_code | `string` | \"B7YEHI\" |\n| device_id | `string` | \"bd96e5e050c0529d\" |\n| notification_token | `string` | \"****\" |\n| device_type | `string` | \"Android\" |\n| tier_id | `integer` | 24 |\n| tier | `string` | \"Tier 3\" |\n| withdrawal_limit | `integer` | 1000000 |\n| deposit_limit | `integer` | 20000 |\n| borrower_max_cumulative_amount | `float` | 999999999999 |\n| support_email | `string` | \"support@example.com\" |\n| loan_count | `integer` | 14 |\n| savings_plans | `integer` | 0 |\n| savings_target | `integer` | 0 |\n| savings_balance | `integer` | 0 |\n| activated | `integer` | 1 |\n| activated_on | `datetime` |  |\n| blacklisted | `integer` | 0 |\n| reason | `string` | null |\n| selfie_bvn_check | `string` | \"Successful\" |\n| selfie_id_check | `string` | \"Successful\" |\n| nok_first_name | `string` | \"Evelyn\" |\n| nok_last_name | `string` | \"Peters\" |\n| nok_phone_number | `string` | \"09099494342\" |\n| nok_email | `string` | \"evelyn@lendsqr.com\" |\n| nok_address | `string` | \"Ayodele Oke-Owo Street Gbagada\" |\n| nok_relationship | `string` | \"Others\" |\n| marital_status | `string` | \"Single\" |\n| no_of_dependent | `string` | \"0\" |\n| type_of_residence | `string` | \"Parents Apartment\" |\n| educational_attainment | `string` | \"BSc, HND and Other Equivalent\" |\n| employment_status | `string` | \"Employed\" |\n| sector_of_employment | `string` | \"Other Financial\" |\n| current_employer | `string` | \"Lendsqr\" |\n| employment_category | `string` | \"Private Company\" |\n| monthly_net_income | `string` | \"200,000 - 399,999\" |\n| work_start_date | `datetime` |  |\n| work_email | `string` | \"ado@example.com\" |\n| country | `string` | \"NGA\" |\n| city | `string` | \"Gbagada\" |\n| lga | `string` | \"Kosofe\" |\n| street | null | null |\n| nearest_landmark | `string` | \"Deeper Life Church\" |\n| longitude | `float` | \\-102.0837554932 |\n| latitude | `float` | 47.421546936 |\n| address | `string` | \"Lagos\" |"
					},
					"response": [
						{
							"name": "Users",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}data/users",
									"host": [
										"{{base_url}}data"
									],
									"path": [
										"users"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Wed, 28 Feb 2024 23:05:31 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "X-Request-ID",
									"value": "2b47c2f1-dea7-4c19-8250-e05e43f48ed0"
								},
								{
									"key": "Last-Modified",
									"value": "Wed, 28 Feb 2024 23:05:29 GMT"
								},
								{
									"key": "ETag",
									"value": "W/\"39515-/Q53k0DdvDTRus/qCQzKY2+97vM\""
								},
								{
									"key": "CF-Cache-Status",
									"value": "DYNAMIC"
								},
								{
									"key": "Server",
									"value": "cloudflare"
								},
								{
									"key": "CF-RAY",
									"value": "85cc5004cf47636a-LHR"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"data\": [\n        {\n            \"org_id\": 9999,\n            \"organization\": \"Example Lender\",\n            \"id\": 44691,\n            \"first_name\": \"Ado`\",\n            \"last_name\": \"John Sule\",\n            \"full_name\": \"Ado John Sule\",\n            \"phone_number\": \"07062569817\",\n            \"phone_number_hash\": \"318c88a8e1fcfc049114e69128275b4d\",\n            \"email\": \"Ado@lendsqr.com\",\n            \"bvn\": \"21234567890\",\n            \"bvn_phone_number\": \"08012345678\",\n            \"date_of_birth\": \"1990-09-10\",\n            \"age\": 26,\n            \"gender\": \"Female\",\n            \"stage_id\": 6,\n            \"stage\": \"done\",\n            \"photo_url\": \"https://image.url.com\",\n            \"mifos_client_id\": \"41053\",\n            \"client_id\": \"41053\",\n            \"savings_id\": \"47197\",\n            \"account_number\": \"IDR000047197----------\",\n            \"account_balance\": 1144.25,\n            \"account_name\": \"Ado John Sule\",\n            \"referral_code\": \"B7YEHI\",\n            \"referred_by\": null,\n            \"referrer_name\": null,\n            \"referrer_email\": null,\n            \"referrer_phone\": null,\n            \"referrer_code\": null,\n            \"device_id\": \"bd96e5e050c0529d\",\n            \"notification_token\": \"********************************\",\n            \"device_type\": \"Android\",\n            \"tier_id\": 24,\n            \"tier\": \"Tier 3\",\n            \"withdrawal_limit\": 1000000,\n            \"deposit_limit\": 20000,\n            \"borrower_max_cumulative_amount\": 999999999999,\n            \"support_email\": \"support@example.com\",\n            \"loan_count\": 14,\n            \"savings_plans\": 0,\n            \"savings_target\": 0,\n            \"savings_balance\": 0,\n            \"activated\": 1,\n            \"activated_on\": \"2021-02-01T10:15:08.000Z\",\n            \"blacklisted\": 0,\n            \"reason\": null,\n            \"selfie_bvn_check\": \"Successful\",\n            \"selfie_id_check\": \"Successful\",\n            \"last_login_date\": \"2023-10-02T23:20:36.000Z\",\n            \"created_on\": \"2021-02-01T11:02:00.000Z\",\n            \"modified_on\": \"2023-10-02T23:20:36.000Z\",\n            \"deleted_on\": null,\n            \"nok_first_name\": \"Evelyn\",\n            \"nok_last_name\": \"Peters\",\n            \"nok_phone_number\": \"09099494342\",\n            \"nok_email\": \"evelyn@lendsqr.com\",\n            \"nok_address\": \"Ayodele Oke-Owo Street  Gbagada\",\n            \"nok_relationship\": \"Others\",\n            \"marital_status\": \"Single\",\n            \"no_of_dependent\": \"0\",\n            \"type_of_residence\": \"Parents Apartment\",\n            \"educational_attainment\": \"BSc, HND and Other Equivalent\",\n            \"employment_status\": \"Employed\",\n            \"sector_of_employment\": \"Other Financial\",\n            \"current_employer\": \"Lendsqr\",\n            \"employment_category\": \"Private Company\",\n            \"monthly_net_income\": \"200,000 - 399,999\",\n            \"work_start_date\": \"2020-11-15T23:00:00.000Z\",\n            \"work_email\": \"ado@example.com\",\n            \"country\": \"NGA\",\n            \"city\": \"Gbagada\",\n            \"lga\": \"Kosofe\",\n            \"street\": null,\n            \"nearest_landmark\": \"Deeper Life Church\",\n            \"longitude\": -102.0837554932,\n            \"latitude\": 47.421546936,\n            \"address\": \"Lagos\",\n            \"process_time\": \"2024-02-28T03:20:26.000Z\"\n        }\n    ]\n}"
						}
					]
				}
			],
			"description": "### Introduction\n\nLenders and their customers generate a lot of data that are important for lenders outside of the Lendsqr ecosystem. Lendsqr allows lenders to use Adjutor APIs to get these data. There are almost infinite limits to the data a lender can get for their customers, transactions, audit activities, etc."
		},
		{
			"name": "Operational Services",
			"item": [
				{
					"name": "Profile",
					"item": [
						{
							"name": "Get Adjutor Services Pricing",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const responseJson = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 1000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}profile/pricing",
									"host": [
										"{{base_url}}profile"
									],
									"path": [
										"pricing"
									]
								},
								"description": "This endpoint is used to obtain the current pricing of the API services. Kindly note that pricing may be different from lender to lender due to commercial negotiations that could have provide some lenders with a different pricing due to volume commitment.\n\nIf you want a cheaper price, which usually comes with a minimum monthly spend, please contact your account manager at growth@lendsqr.com."
							},
							"response": [
								{
									"name": "Get Adjutor Services Pricing",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{base_url}}profile/pricing",
											"host": [
												"{{base_url}}profile"
											],
											"path": [
												"pricing"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Mon, 14 Aug 2023 13:29:17 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "X-Request-ID",
											"value": "ffce023d-0a92-4484-ac47-7923b86002b5"
										},
										{
											"key": "Last-Modified",
											"value": "Mon, 14 Aug 2023 13:29:16 GMT"
										},
										{
											"key": "ETag",
											"value": "W/\"2bc-wuQroduQ50LikXzniRq/QTN48cQ\""
										},
										{
											"key": "CF-Cache-Status",
											"value": "DYNAMIC"
										},
										{
											"key": "Server",
											"value": "cloudflare"
										},
										{
											"key": "CF-RAY",
											"value": "7f698bb35ab303d6-LIS"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip"
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"Successful\",\n    \"data\": [\n        {\n            \"name\": \"Adjutor Oraculi Scoring\",\n            \"amount\": 15\n        },\n        {\n            \"name\": \"Adjutor Name Inquiry\",\n            \"amount\": 0\n        },\n        {\n            \"name\": \"Adjutor Name Inquiry with BVN\",\n            \"amount\": 10\n        },\n        {\n            \"name\": \"Adjutor Karma Lookup\",\n            \"amount\": 10\n        },\n        {\n            \"name\": \"Adjutor BVN Verification\",\n            \"amount\": 20\n        },\n        {\n            \"name\": \"Adjutor Image Compare\",\n            \"amount\": 30\n        },\n        {\n            \"name\": \"Adjutor Ecosystem Lookup\",\n            \"amount\": 25\n        },\n        {\n            \"name\": \"Adjutor Bank List\",\n            \"amount\": 0\n        },\n        {\n            \"name\": \"Adjutor CRC\",\n            \"amount\": 100\n        },\n        {\n            \"name\": \"Adjutor Oraculi Central\",\n            \"amount\": 100\n        },\n        {\n            \"name\": \"Adjutor Credit Registry\",\n            \"amount\": 1500\n        },\n        {\n            \"name\": \"Adjutor Oraculi Accounts\",\n            \"amount\": 10\n        },\n        {\n            \"name\": \"Adjutor Oraculi Statements\",\n            \"amount\": 25\n        },\n        {\n            \"name\": \"Adjutor Oraculi Analytics\",\n            \"amount\": 25\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Get Wallet",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const responseJson = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 1000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});\r",
											"\r",
											"pm.test('Response body contains correct terms', function () {\r",
											"    pm.expect(pm.response.text()).to.include('status');\r",
											"    pm.expect(pm.response.text()).to.include('message');\r",
											"    pm.expect(pm.response.text()).to.include('data');\r",
											"    pm.expect(pm.response.text()).to.include('balance');\r",
											"});\r",
											"\r",
											"pm.test(\"The response has the expected data types\", function(){\r",
											"    pm.expect(responseJson.status).to.be.a('string');\r",
											"    pm.expect(responseJson.message).to.be.a('string');\r",
											"    pm.expect(responseJson.data).to.be.an('object');\r",
											"    pm.expect(responseJson.data.balance).to.be.a('number');\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}profile/wallet",
									"host": [
										"{{base_url}}profile"
									],
									"path": [
										"wallet"
									]
								},
								"description": "This request is used to obtain the wallet information on the lender's profile."
							},
							"response": []
						}
					]
				},
				{
					"name": "Miscellaneous",
					"item": [
						{
							"name": "Get List of Banks",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const responseJson = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 1000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});\r",
											"\r",
											"pm.test('Response body contains correct terms', function () {\r",
											"    pm.expect(pm.response.text()).to.include('status');\r",
											"    pm.expect(pm.response.text()).to.include('message');\r",
											"    pm.expect(pm.response.text()).to.include('data');\r",
											"    pm.expect(pm.response.text()).to.include('name');\r",
											"    pm.expect(pm.response.text()).to.include('shortcode');\r",
											"    pm.expect(pm.response.text()).to.include('longcode');\r",
											"    pm.expect(pm.response.text()).to.include('meta');\r",
											"    pm.expect(pm.response.text()).to.include('cost');\r",
											"    pm.expect(pm.response.text()).to.include('balance');\r",
											"});\r",
											"\r",
											"pm.test(\"The response has the expected data types\", function(){\r",
											"    pm.expect(responseJson.status).to.be.a('string');\r",
											"    pm.expect(responseJson.message).to.be.a('string');\r",
											"    pm.expect(responseJson.data).to.be.an('array');\r",
											"    for (let i = 0; i < responseJson.data; i++) {\r",
											"        pm.expect(responseJson.data[i].name).to.be.a('string');\r",
											"        pm.expect(responseJson.data[i].shortcode).to.be.a('string');\r",
											"        pm.expect(responseJson.data[i].longcode).to.be.a('string');\r",
											"    }\r",
											"    pm.expect(responseJson.meta.balance).to.be.a('number');\r",
											"    pm.expect(responseJson.meta.cost).to.be.a('number');\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}banks",
									"host": [
										"{{base_url}}banks"
									]
								},
								"description": "This endpoint is used for getting banks and their codes.\n\n#### Response Code\n\n| Field | Type | Description |\n| --- | --- | --- |\n| name | `string` | The name of the bank (e.g., \"Access Bank\"). |\n| shortcode | `string` | A unique code for the bank issued by the Central Bank of Nigeria (e.g., \"044\"). |\n| longcode | `string` | A unique code for the bank on the NIBSS network (e.g., \"000014\"). |"
							},
							"response": [
								{
									"name": "Get List of Banks",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{base_url}}banks",
											"host": [
												"{{base_url}}banks"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Mon, 14 Aug 2023 13:17:55 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "X-Request-ID",
											"value": "1c82274f-e038-4de1-998d-8d16b721d3c5"
										},
										{
											"key": "Last-Modified",
											"value": "Mon, 14 Aug 2023 13:17:53 GMT"
										},
										{
											"key": "ETag",
											"value": "W/\"dcc-ImNirDzX8D8qoFcwASXEATbzskg\""
										},
										{
											"key": "CF-Cache-Status",
											"value": "DYNAMIC"
										},
										{
											"key": "Server",
											"value": "cloudflare"
										},
										{
											"key": "CF-RAY",
											"value": "7f697b067a3ed42c-LOS"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip"
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"Successful\",\n    \"data\": [\n        {\n            \"name\": \"3line\",\n            \"shortcode\": null,\n            \"longcode\": \"110005\"\n        },\n        {\n            \"name\": \"Access Bank\",\n            \"shortcode\": \"044\",\n            \"longcode\": \"000014\"\n        },\n        {\n            \"name\": \"Alat by Wema\",\n            \"shortcode\": \"035\",\n            \"longcode\": \"000017\"\n        },\n        {\n            \"name\": \"ASO Savings and Loans\",\n            \"shortcode\": \"401\",\n            \"longcode\": \"090001\"\n        },\n        {\n            \"name\": \"Bankly MBF\",\n            \"shortcode\": \"\",\n            \"longcode\": \"090529\"\n        },\n        {\n            \"name\": \"Carbon\",\n            \"shortcode\": \"565\",\n            \"longcode\": \"100026\"\n        },\n        {\n            \"name\": \"CEMCS Microfinance Bank\",\n            \"shortcode\": \"50823\",\n            \"longcode\": \"090154\"\n        },\n        {\n            \"name\": \"Citibank Nigeria\",\n            \"shortcode\": \"023\",\n            \"longcode\": \"000009\"\n        },\n        {\n            \"name\": \"Conpro MFB (Kredi Bank)\",\n            \"shortcode\": \"50200\",\n            \"longcode\": \"090380\"\n        },\n        {\n            \"name\": \"Coronation Merchant Bank\",\n            \"shortcode\": \"559\",\n            \"longcode\": \"060001\"\n        },\n        {\n            \"name\": \"Dot pay\",\n            \"shortcode\": null,\n            \"longcode\": \"090470\"\n        },\n        {\n            \"name\": \"Ecobank Nigeria\",\n            \"shortcode\": \"050\",\n            \"longcode\": \"000010\"\n        },\n        {\n            \"name\": \"Ekondo Microfinance Bank\",\n            \"shortcode\": \"562\",\n            \"longcode\": \"090097\"\n        },\n        {\n            \"name\": \"Fairmoney MFB\",\n            \"shortcode\": \"\",\n            \"longcode\": \"090551\"\n        },\n        {\n            \"name\": \"FBNQuest Merchant Bank\",\n            \"shortcode\": \"911\",\n            \"longcode\": \"060002\"\n        },\n        {\n            \"name\": \"Fidelity Bank\",\n            \"shortcode\": \"070\",\n            \"longcode\": \"000007\"\n        },\n        {\n            \"name\": \"Firmus MFB\",\n            \"shortcode\": \"51314\",\n            \"longcode\": \"090366\"\n        },\n        {\n            \"name\": \"First Bank of Nigeria\",\n            \"shortcode\": \"011\",\n            \"longcode\": \"000016\"\n        },\n        {\n            \"name\": \"First City Monument Bank\",\n            \"shortcode\": \"214\",\n            \"longcode\": \"000003\"\n        },\n        {\n            \"name\": \"FSDH Merchant Bank\",\n            \"shortcode\": \"501\",\n            \"longcode\": \"400001\"\n        },\n        {\n            \"name\": \"Globus Bank\",\n            \"shortcode\": \"103\",\n            \"longcode\": \"000027\"\n        },\n        {\n            \"name\": \"Guaranty Trust Bank\",\n            \"shortcode\": \"058\",\n            \"longcode\": \"000013\"\n        },\n        {\n            \"name\": \"Hasal Microfinance Bank\",\n            \"shortcode\": \"50383\",\n            \"longcode\": \"090121\"\n        },\n        {\n            \"name\": \"Heritage Bank\",\n            \"shortcode\": \"030\",\n            \"longcode\": \"000020\"\n        },\n        {\n            \"name\": \"Jaiz Bank\",\n            \"shortcode\": \"301\",\n            \"longcode\": \"000006\"\n        },\n        {\n            \"name\": \"Keystone Bank\",\n            \"shortcode\": \"082\",\n            \"longcode\": \"000002\"\n        },\n        {\n            \"name\": \"Kuda Bank\",\n            \"shortcode\": \"50211\",\n            \"longcode\": \"090267\"\n        },\n        {\n            \"name\": \"MoniePoint Bank\",\n            \"shortcode\": \"50515\",\n            \"longcode\": \"090405\"\n        },\n        {\n            \"name\": \"Nova Merchant Bank\",\n            \"shortcode\": \"561\",\n            \"longcode\": \"060003\"\n        },\n        {\n            \"name\": \"Nuntius Internal Bank\",\n            \"shortcode\": \"999999\",\n            \"longcode\": \"999999\"\n        },\n        {\n            \"name\": \"One Finance\",\n            \"shortcode\": \"565\",\n            \"longcode\": \"100026\"\n        },\n        {\n            \"name\": \"Palmpay\",\n            \"shortcode\": \"100033\",\n            \"longcode\": \"100033\"\n        },\n        {\n            \"name\": \"Parallex Bank\",\n            \"shortcode\": \"526\",\n            \"longcode\": \"090004\"\n        },\n        {\n            \"name\": \"paycom (Opay)\",\n            \"shortcode\": \"305\",\n            \"longcode\": \"100004\"\n        },\n        {\n            \"name\": \"Polaris Bank\",\n            \"shortcode\": \"076\",\n            \"longcode\": \"000008\"\n        },\n        {\n            \"name\": \"Providus Bank\",\n            \"shortcode\": \"101\",\n            \"longcode\": \"000023\"\n        },\n        {\n            \"name\": \"Rand Merchant Bank Nigeria\",\n            \"shortcode\": \"502\",\n            \"longcode\": \"000024\"\n        },\n        {\n            \"name\": \"Rubies MFB\",\n            \"shortcode\": \"125\",\n            \"longcode\": \"090175\"\n        },\n        {\n            \"name\": \"Sparkle Microfinance Bank\",\n            \"shortcode\": \"51310\",\n            \"longcode\": \"090325\"\n        },\n        {\n            \"name\": \"Stanbic IBTC Bank\",\n            \"shortcode\": \"221\",\n            \"longcode\": \"000012\"\n        },\n        {\n            \"name\": \"Standard Chartered Bank\",\n            \"shortcode\": \"068\",\n            \"longcode\": \"000021\"\n        },\n        {\n            \"name\": \"Sterling Bank\",\n            \"shortcode\": \"232\",\n            \"longcode\": \"000001\"\n        },\n        {\n            \"name\": \"Suntrust Bank\",\n            \"shortcode\": \"100\",\n            \"longcode\": \"000022\"\n        },\n        {\n            \"name\": \"Support MFB\",\n            \"shortcode\": \"295\",\n            \"longcode\": \"090446\"\n        },\n        {\n            \"name\": \"TAJ Bank\",\n            \"shortcode\": \"302\",\n            \"longcode\": \"000026\"\n        },\n        {\n            \"name\": \"TCF MFB\",\n            \"shortcode\": \"51211\",\n            \"longcode\": \"090115\"\n        },\n        {\n            \"name\": \"Titan Trust Bank\",\n            \"shortcode\": \"102\",\n            \"longcode\": \"000025\"\n        },\n        {\n            \"name\": \"Union Bank of Nigeria\",\n            \"shortcode\": \"032\",\n            \"longcode\": \"000018\"\n        },\n        {\n            \"name\": \"United Bank For Africa\",\n            \"shortcode\": \"033\",\n            \"longcode\": \"000004\"\n        },\n        {\n            \"name\": \"Unity Bank\",\n            \"shortcode\": \"215\",\n            \"longcode\": \"000011\"\n        },\n        {\n            \"name\": \"VFD\",\n            \"shortcode\": \"566\",\n            \"longcode\": \"090110\"\n        },\n        {\n            \"name\": \"Wema Bank\",\n            \"shortcode\": \"035\",\n            \"longcode\": \"000017\"\n        },\n        {\n            \"name\": \"Zenith Bank\",\n            \"shortcode\": \"057\",\n            \"longcode\": \"000015\"\n        }\n    ],\n    \"meta\": {\n        \"cost\": 0,\n        \"balance\": 1225\n    }\n}"
								}
							]
						},
						{
							"name": "Get Status Check",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const responseJson = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 1000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});\r",
											"\r",
											"pm.test('Response body contains correct terms', function () {\r",
											"    pm.expect(pm.response.text()).to.include('status');\r",
											"    pm.expect(pm.response.text()).to.include('data');\r",
											"    pm.expect(pm.response.text()).to.include('service');\r",
											"    pm.expect(pm.response.text()).to.include('success');\r",
											"});\r",
											"\r",
											"pm.test(\"The response has the expected data types\", function(){\r",
											"    pm.expect(responseJson.status).to.be.a('boolean');\r",
											"    pm.expect(responseJson.data).to.be.an('array');\r",
											"    for (let i = 0; i < responseJson.data; i++) {\r",
											"        pm.expect(responseJson.data[i].service).to.be.a('string');\r",
											"        pm.expect(responseJson.data[i].success).to.be.a('boolean');\r",
											"    }\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}status",
									"host": [
										"{{base_url}}status"
									]
								},
								"description": "This endpoint is used to obtain the status of systems under Adjutor."
							},
							"response": [
								{
									"name": "Get Status Check",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{base_url}}status",
											"host": [
												"{{base_url}}status"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Mon, 14 Aug 2023 13:18:09 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "X-Request-ID",
											"value": "2c08234b-24ec-4518-9893-6334a9701fe8"
										},
										{
											"key": "ETag",
											"value": "W/\"323-kZyzG8ZmWrOKUR10s/0qZ95jhMM\""
										},
										{
											"key": "CF-Cache-Status",
											"value": "DYNAMIC"
										},
										{
											"key": "Server",
											"value": "cloudflare"
										},
										{
											"key": "CF-RAY",
											"value": "7f697b679c7fd42c-LOS"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip"
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": true,\n    \"data\": [\n        {\n            \"service\": \"adjutor-oraculi-scoring\",\n            \"success\": true\n        },\n        {\n            \"service\": \"adjutor-name-inquiry\",\n            \"success\": false\n        },\n        {\n            \"service\": \"adjutor-name-inquiry-bvn\",\n            \"success\": false\n        },\n        {\n            \"service\": \"adjutor-karma-lookup\",\n            \"success\": true\n        },\n        {\n            \"service\": \"adjutor-bvn-verification\",\n            \"success\": false\n        },\n        {\n            \"service\": \"adjutor-image-compare\",\n            \"success\": true\n        },\n        {\n            \"service\": \"adjutor-ecosystem-lookup\",\n            \"success\": true\n        },\n        {\n            \"service\": \"adjutor-bank-list\",\n            \"success\": true\n        },\n        {\n            \"service\": \"adjutor-crc\",\n            \"success\": false\n        },\n        {\n            \"service\": \"adjutor-firstcentral\",\n            \"success\": false\n        },\n        {\n            \"service\": \"adjutor-credit-registry\",\n            \"success\": false\n        },\n        {\n            \"service\": \"adjutor-oraculi-accounts\",\n            \"success\": true\n        },\n        {\n            \"service\": \"adjutor-oraculi-statement\",\n            \"success\": true\n        },\n        {\n            \"service\": \"adjutor-oraculi-analytics\",\n            \"success\": true\n        },\n        {\n            \"service\": \"adjutor-oraculi-models\",\n            \"success\": true\n        }\n    ]\n}"
								}
							]
						}
					],
					"description": "The Miscellaneous folder contains resources and tools for miscellaneous tasks, such as obtaining bank codes and checking the status of the Adjútor API service to ensure that it is functioning properly. This folder provides a convenient way to access information and troubleshoot any issues, helping you stay informed and in control of your system at all times."
				}
			],
			"description": "These endpoints are a collection of APIs to be used by a lender or an integrator to get information about their accounts, profiles, and wallet balances."
		},
		{
			"name": "Direct Debit",
			"item": [
				{
					"name": "Banks",
					"item": [
						{
							"name": "Get All Banks",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const responseJson = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 1000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});\r",
											"\r",
											"pm.test('Response body contains correct terms', function () {\r",
											"    pm.expect(pm.response.text()).to.include('status');\r",
											"    pm.expect(pm.response.text()).to.include('message');\r",
											"    pm.expect(pm.response.text()).to.include('data');\r",
											"    pm.expect(pm.response.text()).to.include('id');\r",
											"    pm.expect(pm.response.text()).to.include('name');\r",
											"    pm.expect(pm.response.text()).to.include('bank_code');\r",
											"    pm.expect(pm.response.text()).to.include('institution_code');\r",
											"    pm.expect(pm.response.text()).to.include('url');\r",
											"    pm.expect(pm.response.text()).to.include('activation_amount');\r",
											"    pm.expect(pm.response.text()).to.include('meta');\r",
											"    pm.expect(pm.response.text()).to.include('cost');\r",
											"    pm.expect(pm.response.text()).to.include('balance');\r",
											"});\r",
											"\r",
											"pm.test(\"The response has the expected data types\", function(){\r",
											"    pm.expect(responseJson.status).to.be.a('string');\r",
											"    pm.expect(responseJson.message).to.be.a('string');\r",
											"    pm.expect(responseJson.data).to.be.an('object');\r",
											"    pm.expect(responseJson.data.data).to.be.an('array');\r",
											"    for (let i = 0; i < responseJson.data; i++) {\r",
											"        pm.expect(responseJson.data.data[i].id).to.be.a('number');\r",
											"        pm.expect(responseJson.data.data[i].name).to.be.a('string');\r",
											"        pm.expect(responseJson.data.data[i].bank_code).to.be.a('string');\r",
											"        pm.expect(responseJson.data.data[i].institution_code).to.be.a('string');\r",
											"        pm.expect(responseJson.data.data[i].url).to.be.a('string');\r",
											"        pm.expect(responseJson.data.data[i].activation_amount).to.be.a('string');\r",
											"        pm.expect(responseJson.data.data[i].meta).to.be.a('string');\r",
											"        pm.expect(responseJson.data.meta).to.be.an('object');\r",
											"        pm.expect(responseJson.data.meta.records).to.be.a('number');\r",
											"        pm.expect(responseJson.data.meta.page).to.be.a('string');\r",
											"        pm.expect(responseJson.data.meta.records).to.be.a('number');\r",
											"        pm.expect(responseJson.data.meta.page_size).to.be.a('string');\r",
											"        pm.expect(responseJson.meta).to.be.an('object');\r",
											"        pm.expect(responseJson.meta.cost).to.be.a('number');\r",
											"        pm.expect(responseJson.meta.balance).to.be.a('number');\r",
											"    }\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is JSON\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}direct-debit/banks?limit=100&page=1&sort_dir=ASC",
									"host": [
										"{{base_url}}direct-debit"
									],
									"path": [
										"banks"
									],
									"query": [
										{
											"key": "limit",
											"value": "100"
										},
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "sort_dir",
											"value": "ASC"
										}
									]
								},
								"description": "This endpoints returns the lis of banks able to provide direct debit authorizations on their customers' accounts.\n\n#### Response Body Fields\n\n| Field | Type | Description |\n| --- | --- | --- |\n| id | `Integer` | Unique identifier for the bank. |\n| name | `string` | Name of the bank. |\n| bank_code | `string` | This is the CBN code associated with the bank. It is usually 3 digits for commercial banks and 5 digits for microfinance banks. |\n| institution_code | `string` | This is the NIBSS code associated with the bank. It is is usually 6 digits long. For commercial banks, the code is in the format 0000XX where X is from 0 to 99. |\n| url | `string` | URL pointing to the bank's logo or image. |"
							},
							"response": [
								{
									"name": "Get All Banks",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}direct-debit/banks?limit=100&page=1&sort_dir=ASC",
											"host": [
												"{{base_url}}direct-debit"
											],
											"path": [
												"banks"
											],
											"query": [
												{
													"key": "limit",
													"value": "100"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "sort_dir",
													"value": "ASC"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "X-Request-ID",
											"value": "713b4442-1cf6-46bb-8a39-85de0ad54d89"
										},
										{
											"key": "Last-Modified",
											"value": "Wed, 27 Mar 2024 16:28:29 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "6395"
										},
										{
											"key": "ETag",
											"value": "W/\"18fb-Pj1/ZMbxWk/ZZFF1vrvEYAOh3tM\""
										},
										{
											"key": "Date",
											"value": "Wed, 27 Mar 2024 16:28:31 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"data\": [\n            {\n                \"id\": 1,\n                \"name\": \"Access Bank\",\n                \"bank_code\": \"044\",\n                \"institution_code\": \"000014\",\n                \"url\": \"https://lendstack-s3.s3.us-east-2.amazonaws.com/bank_logos/044.png\",\n                \"activation_amount\": \"50.00\",\n                \"meta\": \"{\\\"mandate-activation-amount\\\":50,\\\"mandate-activation-bank\\\":\\\"Paystack-Titan\\\",\\\"mandate-activation-account-number\\\":\\\"9880218357\\\"}\"\n            },\n            {\n                \"id\": 7,\n                \"name\": \"Ecobank Nigeria\",\n                \"bank_code\": \"050\",\n                \"institution_code\": \"000010\",\n                \"url\": \"https://lendstack-s3.s3.us-east-2.amazonaws.com/bank_logos/050.png\",\n                \"activation_amount\": \"50.00\",\n                \"meta\": \"{\\\"mandate-activation-amount\\\":50,\\\"mandate-activation-bank\\\":\\\"Paystack-Titan\\\",\\\"mandate-activation-account-number\\\":\\\"9880218357\\\"}\"\n            },\n            {\n                \"id\": 11,\n                \"name\": \"Fidelity Bank\",\n                \"bank_code\": \"070\",\n                \"institution_code\": \"000007\",\n                \"url\": \"https://lendstack-s3.s3.us-east-2.amazonaws.com/bank_logos/070.png\",\n                \"activation_amount\": \"50.00\",\n                \"meta\": \"{\\\"mandate-activation-amount\\\":50,\\\"mandate-activation-bank\\\":\\\"Paystack-Titan\\\",\\\"mandate-activation-account-number\\\":\\\"9880218357\\\"}\"\n            },\n            {\n                \"id\": 10,\n                \"name\": \"First Bank of Nigeria\",\n                \"bank_code\": \"011\",\n                \"institution_code\": \"000016\",\n                \"url\": \"https://lendstack-s3.s3.us-east-2.amazonaws.com/bank_logos/011.png\",\n                \"activation_amount\": \"50.00\",\n                \"meta\": \"{\\\"mandate-activation-amount\\\":50,\\\"mandate-activation-bank\\\":\\\"Paystack-Titan\\\",\\\"mandate-activation-account-number\\\":\\\"9880218357\\\"}\"\n            },\n            {\n                \"id\": 12,\n                \"name\": \"First City Monument Bank\",\n                \"bank_code\": \"214\",\n                \"institution_code\": \"000003\",\n                \"url\": \"https://lendstack-s3.s3.us-east-2.amazonaws.com/bank_logos/214.png\",\n                \"activation_amount\": \"50.00\",\n                \"meta\": \"{\\\"mandate-activation-amount\\\":50,\\\"mandate-activation-bank\\\":\\\"Paystack-Titan\\\",\\\"mandate-activation-account-number\\\":\\\"9880218357\\\"}\"\n            },\n            {\n                \"id\": 16,\n                \"name\": \"Guaranty Trust Bank\",\n                \"bank_code\": \"058\",\n                \"institution_code\": \"000013\",\n                \"url\": \"https://lendstack-s3.s3.us-east-2.amazonaws.com/bank_logos/058.png\",\n                \"activation_amount\": \"50.00\",\n                \"meta\": \"{\\\"mandate-activation-amount\\\":50,\\\"mandate-activation-bank\\\":\\\"Paystack-Titan\\\",\\\"mandate-activation-account-number\\\":\\\"9880218357\\\"}\"\n            },\n            {\n                \"id\": 18,\n                \"name\": \"Keystone Bank\",\n                \"bank_code\": \"082\",\n                \"institution_code\": \"000002\",\n                \"url\": \"https://lendstack-s3.s3.us-east-2.amazonaws.com/bank_logos/082.png\",\n                \"activation_amount\": \"50.00\",\n                \"meta\": \"{\\\"mandate-activation-amount\\\":50,\\\"mandate-activation-bank\\\":\\\"Paystack-Titan\\\",\\\"mandate-activation-account-number\\\":\\\"9880218357\\\"}\"\n            },\n            {\n                \"id\": 22,\n                \"name\": \"Kuda Bank\",\n                \"bank_code\": \"50211\",\n                \"institution_code\": \"090267\",\n                \"url\": \"https://lendstack-s3.s3.us-east-2.amazonaws.com/bank_logos/50211.png\",\n                \"activation_amount\": \"50.00\",\n                \"meta\": \"{\\\"mandate-activation-amount\\\":50,\\\"mandate-activation-bank\\\":\\\"Paystack-Titan\\\",\\\"mandate-activation-account-number\\\":\\\"9880218357\\\"}\"\n            },\n            {\n                \"id\": 25,\n                \"name\": \"Polaris Bank\",\n                \"bank_code\": \"076\",\n                \"institution_code\": \"000008\",\n                \"url\": \"https://lendstack-s3.s3.us-east-2.amazonaws.com/bank_logos/076.png\",\n                \"activation_amount\": \"50.00\",\n                \"meta\": \"{\\\"mandate-activation-amount\\\":50,\\\"mandate-activation-bank\\\":\\\"Paystack-Titan\\\",\\\"mandate-activation-account-number\\\":\\\"9880218357\\\"}\"\n            },\n            {\n                \"id\": 24,\n                \"name\": \"Providus Bank\",\n                \"bank_code\": \"101\",\n                \"institution_code\": \"000023\",\n                \"url\": \"https://lendstack-s3.s3.us-east-2.amazonaws.com/bank_logos/101.png\",\n                \"activation_amount\": \"50.00\",\n                \"meta\": \"{\\\"mandate-activation-amount\\\":50,\\\"mandate-activation-bank\\\":\\\"Paystack-Titan\\\",\\\"mandate-activation-account-number\\\":\\\"9880218357\\\"}\"\n            },\n            {\n                \"id\": 27,\n                \"name\": \"Stanbic IBTC Bank\",\n                \"bank_code\": \"221\",\n                \"institution_code\": \"000012\",\n                \"url\": \"https://lendstack-s3.s3.us-east-2.amazonaws.com/bank_logos/221.png\",\n                \"activation_amount\": \"50.00\",\n                \"meta\": \"{\\\"mandate-activation-amount\\\":50,\\\"mandate-activation-bank\\\":\\\"Paystack-Titan\\\",\\\"mandate-activation-account-number\\\":\\\"9880218357\\\"}\"\n            },\n            {\n                \"id\": 28,\n                \"name\": \"Standard Chartered Bank\",\n                \"bank_code\": \"068\",\n                \"institution_code\": \"000021\",\n                \"url\": \"https://lendstack-s3.s3.us-east-2.amazonaws.com/bank_logos/068.png\",\n                \"activation_amount\": \"100.00\",\n                \"meta\": \"{\\\"mandate-activation-amount\\\":100,\\\"mandate-activation-bank\\\":\\\"Paystack-Titan\\\",\\\"mandate-activation-account-number\\\":\\\"9880218357\\\"}\"\n            },\n            {\n                \"id\": 29,\n                \"name\": \"Sterling Bank\",\n                \"bank_code\": \"232\",\n                \"institution_code\": \"000001\",\n                \"url\": \"https://lendstack-s3.s3.us-east-2.amazonaws.com/bank_logos/232.png\",\n                \"activation_amount\": \"50.00\",\n                \"meta\": \"{\\\"mandate-activation-amount\\\":50,\\\"mandate-activation-bank\\\":\\\"Paystack-Titan\\\",\\\"mandate-activation-account-number\\\":\\\"9880218357\\\"}\"\n            },\n            {\n                \"id\": 34,\n                \"name\": \"Suntrust Bank\",\n                \"bank_code\": \"100\",\n                \"institution_code\": \"000022\",\n                \"url\": \"https://lendstack-s3.s3.us-east-2.amazonaws.com/bank_logos/100.png\",\n                \"activation_amount\": \"50.00\",\n                \"meta\": \"{\\\"mandate-activation-amount\\\":50,\\\"mandate-activation-bank\\\":\\\"Paystack-Titan\\\",\\\"mandate-activation-account-number\\\":\\\"9880218357\\\"}\"\n            },\n            {\n                \"id\": 36,\n                \"name\": \"Union Bank of Nigeria\",\n                \"bank_code\": \"032\",\n                \"institution_code\": \"000018\",\n                \"url\": \"https://lendstack-s3.s3.us-east-2.amazonaws.com/bank_logos/032.png\",\n                \"activation_amount\": \"100.00\",\n                \"meta\": \"{\\\"mandate-activation-amount\\\":100,\\\"mandate-activation-bank\\\":\\\"Paystack-Titan\\\",\\\"mandate-activation-account-number\\\":\\\"9880218357\\\"}\"\n            },\n            {\n                \"id\": 40,\n                \"name\": \"United Bank For Africa\",\n                \"bank_code\": \"033\",\n                \"institution_code\": \"000004\",\n                \"url\": \"https://lendstack-s3.s3.us-east-2.amazonaws.com/bank_logos/033.png\",\n                \"activation_amount\": \"50.00\",\n                \"meta\": \"{\\\"mandate-activation-amount\\\":50,\\\"mandate-activation-bank\\\":\\\"Paystack-Titan\\\",\\\"mandate-activation-account-number\\\":\\\"9880218357\\\"}\"\n            },\n            {\n                \"id\": 37,\n                \"name\": \"Unity Bank\",\n                \"bank_code\": \"215\",\n                \"institution_code\": \"000011\",\n                \"url\": \"https://lendstack-s3.s3.us-east-2.amazonaws.com/bank_logos/215.png\",\n                \"activation_amount\": \"100.00\",\n                \"meta\": \"{\\\"mandate-activation-amount\\\":100,\\\"mandate-activation-bank\\\":\\\"Paystack-Titan\\\",\\\"mandate-activation-account-number\\\":\\\"9880218357\\\"}\"\n            },\n            {\n                \"id\": 2,\n                \"name\": \"Wema Bank\",\n                \"bank_code\": \"035\",\n                \"institution_code\": \"000017\",\n                \"url\": \"https://lendstack-s3.s3.us-east-2.amazonaws.com/bank_logos/035.png\",\n                \"activation_amount\": \"50.00\",\n                \"meta\": \"{\\\"mandate-activation-amount\\\":50,\\\"mandate-activation-bank\\\":\\\"Paystack-Titan\\\",\\\"mandate-activation-account-number\\\":\\\"9880218357\\\"}\"\n            },\n            {\n                \"id\": 41,\n                \"name\": \"Zenith Bank\",\n                \"bank_code\": \"057\",\n                \"institution_code\": \"000015\",\n                \"url\": \"https://lendstack-s3.s3.us-east-2.amazonaws.com/bank_logos/057.png\",\n                \"activation_amount\": \"50.00\",\n                \"meta\": \"{\\\"mandate-activation-amount\\\":50,\\\"mandate-activation-bank\\\":\\\"Paystack-Titan\\\",\\\"mandate-activation-account-number\\\":\\\"9880218357\\\"}\"\n            }\n        ],\n        \"meta\": {\n            \"records\": 19,\n            \"page\": \"1\",\n            \"pages\": 1,\n            \"page_size\": \"100\"\n        }\n    },\n    \"meta\": {\n        \"cost\": 1,\n        \"balance\": 1010\n    }\n}"
								}
							]
						},
						{
							"name": "Get Details of a Bank",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const responseJson = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 1000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});\r",
											"\r",
											"pm.test('Response body contains correct terms', function () {\r",
											"    pm.expect(pm.response.text()).to.include('status');\r",
											"    pm.expect(pm.response.text()).to.include('message');\r",
											"    pm.expect(pm.response.text()).to.include('data');\r",
											"    pm.expect(pm.response.text()).to.include('id');\r",
											"    pm.expect(pm.response.text()).to.include('name');\r",
											"    pm.expect(pm.response.text()).to.include('bank_code');\r",
											"    pm.expect(pm.response.text()).to.include('institution_code');\r",
											"    pm.expect(pm.response.text()).to.include('url');\r",
											"    pm.expect(pm.response.text()).to.include('activation_amount');\r",
											"    pm.expect(pm.response.text()).to.include('meta');\r",
											"    pm.expect(pm.response.text()).to.include('cost');\r",
											"    pm.expect(pm.response.text()).to.include('balance');\r",
											"});\r",
											"\r",
											"pm.test(\"The response has the expected data types\", function(){\r",
											"    pm.expect(responseJson.status).to.be.a('string');\r",
											"    pm.expect(responseJson.message).to.be.a('string');\r",
											"    pm.expect(responseJson.data).to.be.an('object');\r",
											"    pm.expect(responseJson.data.id).to.be.a('number');\r",
											"    pm.expect(responseJson.data.name).to.be.a('string');\r",
											"    pm.expect(responseJson.data.bank_code).to.be.a('string');\r",
											"    pm.expect(responseJson.data.institution_code).to.be.a('string');\r",
											"    pm.expect(responseJson.data.url).to.be.a('string');\r",
											"    pm.expect(responseJson.data.activation_amount).to.be.a('string');\r",
											"    pm.expect(responseJson.data.meta).to.be.a('string');\r",
											"    pm.expect(responseJson.meta).to.be.an('object');\r",
											"    pm.expect(responseJson.meta.cost).to.be.a('number');\r",
											"    pm.expect(responseJson.meta.balance).to.be.a('number');\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is JSON\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}direct-debit/banks/:bank_id",
									"host": [
										"{{base_url}}direct-debit"
									],
									"path": [
										"banks",
										":bank_id"
									],
									"variable": [
										{
											"key": "bank_id",
											"value": "22"
										}
									]
								},
								"description": "Retrieve the details of a specific account.\n\n#### Query Params\n\n| Field | Type | Description |\n| --- | --- | --- |\n| bank_id | `Integer` | **Required**. The ID of the bank you want to get the details of. |\n\n#### Response Body Field\n\n| Field | Type | Description |\n| --- | --- | --- |\n| status | `string` | The status of the response. |\n| message | `string` | A message indicating the result of the operation. |\n| data | `object` | The data object contains specific information related to the response. |\n| ID | `number` | The ID associated with the bank. |\n| bank | `string` | The name of the bank. |\n| bank_code | `string` | The bank code associated with the bank. |\n| institutional_code | `string` | The institution code associated with the bank. |\n| url | `string` | The URL pointing to the bank's logo image |"
							},
							"response": [
								{
									"name": "Get Details of a Bank",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{base_url}}direct-debit/banks/:bank_id",
											"host": [
												"{{base_url}}direct-debit"
											],
											"path": [
												"banks",
												":bank_id"
											],
											"variable": [
												{
													"key": "bank_id",
													"value": "1"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "X-Request-ID",
											"value": "c711d34d-4378-472a-a43c-5a603a435c21"
										},
										{
											"key": "Last-Modified",
											"value": "Wed, 27 Mar 2024 16:48:19 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "403"
										},
										{
											"key": "ETag",
											"value": "W/\"193-NjjN04voJ7aLorbmK2F0o9mtDHg\""
										},
										{
											"key": "Date",
											"value": "Wed, 27 Mar 2024 16:48:22 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"id\": 1,\n        \"name\": \"Access Bank\",\n        \"bank_code\": \"044\",\n        \"institution_code\": \"000014\",\n        \"url\": \"https://lendstack-s3.s3.us-east-2.amazonaws.com/bank_logos/044.png\",\n        \"activation_amount\": \"50.00\",\n        \"meta\": \"{\\\"mandate-activation-amount\\\":50,\\\"mandate-activation-bank\\\":\\\"Paystack-Titan\\\",\\\"mandate-activation-account-number\\\":\\\"9880218357\\\"}\"\n    },\n    \"meta\": {\n        \"cost\": 1,\n        \"balance\": 1010\n    }\n}"
								}
							]
						},
						{
							"name": "Verify Bank Account Number",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const responseJson = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 1000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});\r",
											"\r",
											"pm.test('Response body contains correct terms', function () {\r",
											"    pm.expect(pm.response.text()).to.include('status');\r",
											"    pm.expect(pm.response.text()).to.include('data');\r",
											"    pm.expect(pm.response.text()).to.include('message');\r",
											"    pm.expect(pm.response.text()).to.include('account_name');\r",
											"    pm.expect(pm.response.text()).to.include('bvn');\r",
											"    pm.expect(pm.response.text()).to.include('session_id');\r",
											"    pm.expect(pm.response.text()).to.include('meta');\r",
											"    pm.expect(pm.response.text()).to.include('cost');\r",
											"    pm.expect(pm.response.text()).to.include('balance');\r",
											"});\r",
											"\r",
											"pm.test(\"The response has the expected data types\", function(){\r",
											"    pm.expect(responseJson.status).to.be.a('string');\r",
											"    pm.expect(responseJson.message).to.be.a('string');\r",
											"    pm.expect(responseJson.data).to.be.an('object');\r",
											"    pm.expect(responseJson.data.account_name).to.be.a('string');\r",
											"    pm.expect(responseJson.data.bvn).to.be.a('string');\r",
											"    pm.expect(responseJson.data.session_id).to.be.a('string');\r",
											"    pm.expect(responseJson.meta).to.be.an('object');\r",
											"    pm.expect(responseJson.meta.cost).to.be.a('number');\r",
											"    pm.expect(responseJson.meta.balance).to.be.a('number');\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"account_number\": \"2006198495\",\n    \"bank_code\": \"50211\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}direct-debit/banks/account-lookup",
									"host": [
										"{{base_url}}direct-debit"
									],
									"path": [
										"banks",
										"account-lookup"
									]
								},
								"description": "This endpoint is used to verify the validity and details of a Nigerian account number.\n\n#### Request Body Field\n\n| Field | Type | Description |\n| --- | --- | --- |\n| account_number | `string` | **Required**. A valid `NUBAN` account number which must be 10 digits. |\n| bank_id | `integer` | **Required**. Identifier of the bank to which the account belongs. |\n\n#### Response Body Field\n\n| Field | Type | Description |\n| --- | --- | --- |\n| account_name | `string` | Name of the account holder associated with the account number. |\n| bvn | `string` | Masked Bank Verification Number (BVN) associated with the account holder. If the BVN on the account is 22222222222 then it will be shown as 22000000022 |\n| session_id | `string` | Session ID or identifier associated with the account lookup operation. |"
							},
							"response": [
								{
									"name": "Verify Bank Account Number",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_number\": \"2150302690\",\n    \"bank_code\": \"057\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}direct-debit/banks/account-lookup",
											"host": [
												"{{base_url}}direct-debit"
											],
											"path": [
												"banks",
												"account-lookup"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "X-Request-ID",
											"value": "ea9bc497-d658-4848-9906-d4d2c5274bcf"
										},
										{
											"key": "Last-Modified",
											"value": "Wed, 27 Mar 2024 16:50:07 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "186"
										},
										{
											"key": "ETag",
											"value": "W/\"ba-/00MCsOg6ox3KzdLPt8n1Zi280k\""
										},
										{
											"key": "Date",
											"value": "Wed, 27 Mar 2024 16:50:11 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"account_name\": \"vee Test\",\n        \"bvn\": \"220000000099\",\n        \"session_id\": \"999999230427160615129743771734\"\n    },\n    \"meta\": {\n        \"cost\": 1,\n        \"balance\": 1010\n    }\n}"
								}
							]
						}
					],
					"description": "These endpoints are used to get the list of Nigerian banks, details of specific banks. They can also be used to bank account verification.\n\n#### Note\n\nNot all banks are included as some banks have either not implemented their direct debit service, or they return DO NOT HONOR on direct debit requests.\n\nIf a bank is missing, please email [support@lendsqr.com](https://mailto:support@lendsqr.com) for assistance or more details."
				}
			],
			"description": "## Getting started\n\nDirect debit is a payment method that allows an account holder to grant authorization for a biller or lender to take money from their bank account for services as of when due. Direct debit is similar to debit cards in its ability to debit a customer’s account with prior authorization.\n\nDirect debit helps businesses that require recurring payments on specific dates with fixed amounts, such as insurance premiums, loan repayments, service subscriptions, or variable recurring payments on different dates (e.g., postpaid lines, and electricity usage).\n\nThis direct debit API facilitates the process for Service Providers (referred to as Billers) to generate debit mandate instructions on their client's/customers' bank accounts for services rendered or products sold.\n\nThese debit mandate instructions are created as digital versions of physical instructions duly signed by the account owners (clients/customers). Once generated, the mandate instructions are automatically sent to the bank where the account is held for review and approval. The approval process requires the bank to contact the account owner to authorize the mandate, which typically takes 24 to 48 hours.\n\nThe system automatically assigns a unique mandate code to each initiated mandate. This mandate code is used to initiate a direct debit transaction on the bank account associated with the debit mandate instruction.\n\nThis document provides a comprehensive overview and detailed specifications of the Direct Debit APIs, including all the necessary information for seamless integration into your respective applications.\n\n## Direct debit process\n\nDirect debit mandates follow a streamlined process that may take at least 2 hours from activation to when they are available for debits. These steps are:\n\n- Mandate creation\n- Mandate activation\n- Setup for debit\n- Transactions\n    \n\n### Mandate creation\n\nThe first step is the creation of mandate using the API defined in this collection. As soon as the mandate is created, you should inform the customer of the next steps about how to activate the mandate.\n\nFrom a best practices point of view, the customer should be informed on your app, by email, and SMS.\n\n### Mandate activation\n\nActivation of the mandate is usually done by the transfer of a N50 (or N100 for banks where the minimum transfer amount is N100) to designated bank accounts operated by NIBSS. The customer has 168 hours (7 days) to send this amount if not the mandate is automatically canceled.\n\nImmediately the activation amount is received at either of the banks, the mandate is automatically activated. However, it is not available for debit at this time.\n\n#### Banks for mandate activation\n\nThe following are the authorized banks which customers should use for direct debit mandate activation.\n\n| **Fidelity Bank** | **Paystack Titan** |\n| --- | --- |\n| Account: 9020025928  <br>Bank: Fidelity Bank Plc.  <br>You can transfer from USSD, mobile app or internet banking | Account: 9880218357  <br>Bank: Paystack-Titan  <br>You can transfer from your mobile app and internet banking |\n\n### Setup for debit\n\nThere are usually some backend processes done by NIBSS that then processes the accounts for debit and this may take up to 2 hours before completion. If you try to debit the mandate before this time, it would return an error message such as \"do not honor\"."
		},
		{
			"name": "Kolo",
			"item": [
				{
					"name": "Initialize Auth",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://app.kolo.finance/data-share?response_type=code&client_id=your_client_id&redirect_uri=redirect_uri&scope=transaction:list transaction:view",
							"protocol": "https",
							"host": [
								"app",
								"kolo",
								"finance"
							],
							"path": [
								"data-share"
							],
							"query": [
								{
									"key": "response_type",
									"value": "code"
								},
								{
									"key": "client_id",
									"value": "your_client_id"
								},
								{
									"key": "redirect_uri",
									"value": "redirect_uri"
								},
								{
									"key": "scope",
									"value": "transaction:list transaction:view"
								}
							]
						},
						"description": "To access the Kolo API, you need to initialize the authorization process. This involves obtaining an authorization code, which can then be exchanged for an access token."
					},
					"response": [
						{
							"name": "Initialize Auth",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://app.kolo.finance/data-share?response_type=code&client_id=e2f2ce02-c9f3-4621-9b05-9a8824f43b95&redirect_uri=https://belhope.lsq.app&scope=transaction:list%20transaction:view",
									"protocol": "https",
									"host": [
										"app",
										"kolo",
										"finance"
									],
									"path": [
										"data-share"
									],
									"query": [
										{
											"key": "response_type",
											"value": "code"
										},
										{
											"key": "client_id",
											"value": "e2f2ce02-c9f3-4621-9b05-9a8824f43b95"
										},
										{
											"key": "redirect_uri",
											"value": "https://belhope.lsq.app"
										},
										{
											"key": "scope",
											"value": "transaction:list%20transaction:view"
										}
									]
								}
							},
							"_postman_previewlanguage": "Text",
							"header": null,
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Exchange Code",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"redirect_uri\": \"https://belhope.lsq.app\",\n    \"grant_type\": \"authorization_code\",\n    \"code\": \"kEhA1fQsT86ZxCqh\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}kolo/auth",
							"host": [
								"{{base_url}}kolo"
							],
							"path": [
								"auth"
							]
						},
						"description": "Use this endpoint to exchange an authorization code for an access token. With the access token gotten from the response body, you can go ahead to call the other Kolo endpoints. This is to ensure that the customer has provided you with the complete consent to view their data."
					},
					"response": [
						{
							"name": "Exchange Code",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"redirect_uri\": \"https://belhope.lsq.app\",\n    \"grant_type\": \"authorization_code\",\n    \"code\": \"kEhA1fQsT86ZxCqh\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}kolo/auth",
									"host": [
										"{{base_url}}kolo"
									],
									"path": [
										"auth"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "X-Request-ID",
									"value": "916cb700-6bf0-40e9-9cbb-6ead65be72a8"
								},
								{
									"key": "Last-Modified",
									"value": "Thu, 20 Jun 2024 14:11:30 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "800"
								},
								{
									"key": "ETag",
									"value": "W/\"320-NaqaYYz/P66sX2nMknkFsQMRyT8\""
								},
								{
									"key": "Date",
									"value": "Thu, 20 Jun 2024 14:11:35 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"access_token\": \"VeIInXBornQSZKAAhcGwxjhgVA3vyR8xYmBmrikN0iQcwiZbqGVvkYTeHPfH2F4J2sT2GLruiLjsZ3BI9IwIaEOFEVGubblGnuTQl0QNptyoohiR2DpZJmcc5QyhYHJ7kNdlYTJgK2fHddembOsGwBJSyXfvehll9zQQHVtmsrKtUODEwbaIKkZ1gFu9TjJpSfFR9ddcm9j2ozJgjns0mQ5TjHKHdZJpSFKVlG1dX21v36mINY7JIBatp2NlE7\",\n    \"refresh_token\": \"5yOpJCqj2XBsQq4qSb8YRQM2g4iSIqyKeKyK9QwOa06wPyVoPyo4f9FCAMS4tIE5XtdOwPBm4bZrhOyU580CzmMGmagCkzM7Mz04SAnHCtMbDYdhqRj3UllnphbbwkTycRpQlXAoBz86hAJhlSMRHE0vl8SbcUUxm0u0kqg8pxyGtxtOQeBoY2ghQnU313oc1SQ9tovb3De2QJNE5TWUWuE6sT0Cuw2kd4cDa98dG9xyR3wL3HVVbSpK9MCfuM\",\n    \"username\": \"adewunmiakinsanya@gmail.com\",\n    \"scope\": \"bank_account:list bank_account:add bank_account:view bank_account:delete bank_account:update bank_account:sync transaction:list transaction:view transaction:update profile:view\",\n    \"token_type\": \"Bearer\"\n}"
						}
					]
				},
				{
					"name": "List Transactions",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-access-token",
								"value": "{{x_access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}kolo/transactions",
							"host": [
								"{{base_url}}kolo"
							],
							"path": [
								"transactions"
							]
						},
						"description": "Use this endpoint to get a list of all the transactions of an authenticated customer."
					},
					"response": [
						{
							"name": "List Transactions",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-access-token",
										"value": "{{x_access_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}kolo/transactions",
									"host": [
										"{{base_url}}kolo"
									],
									"path": [
										"transactions"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "X-Request-ID",
									"value": "a2408669-0f07-430c-858d-86969a561f9a"
								},
								{
									"key": "Last-Modified",
									"value": "Thu, 20 Jun 2024 14:14:47 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "11706"
								},
								{
									"key": "ETag",
									"value": "W/\"2dba-LOY5ItnqKmLaIHZst1KW822pj00\""
								},
								{
									"key": "Date",
									"value": "Thu, 20 Jun 2024 14:14:52 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"success\",\n    \"data\": [\n        {\n            \"id\": \"c954f391-83a6-4265-bf7a-e9e1d2db5013\",\n            \"account_number\": \"2208667061\",\n            \"currency\": \"NGN\",\n            \"amount\": \"10.00\",\n            \"balance\": \"436.56\",\n            \"reference\": \"\",\n            \"hash\": \"{\\\"account_number\\\":\\\"2208667061\\\",\\\"bank_code\\\":\\\"057\\\",\\\"amount\\\":10,\\\"balance\\\":436,\\\"type\\\":\\\"credit\\\",\\\"date\\\":\\\"2024-06-08T15:03:00Z\\\"}\",\n            \"status\": \"success\",\n            \"entry_type\": \"credit\",\n            \"narration\": \"NIP/ROLEZ/Transfer/Transfer to Adewunmi O Akinsanya/***7/AT5_MFDS110202406081601\",\n            \"transaction_date\": \"2024-06-08T15:02:10.000Z\",\n            \"transaction_type\": \"Credit\",\n            \"note\": null,\n            \"source\": \"email\",\n            \"provider\": \"google\",\n            \"bank\": {\n                \"id\": \"d645920e395fedad7bbbed0eca3fe2e0\",\n                \"name\": \"Zenith Bank\",\n                \"short_code\": \"057\",\n                \"long_code\": \"057\",\n                \"icon\": \"https://s3.us-east-2.amazonaws.com/kolo.finance/assets/zenithbank-logo-circle.png\"\n            },\n            \"created_on\": \"2024-06-14T19:00:07.070Z\",\n            \"created_by\": null,\n            \"modified_on\": \"2024-06-14T19:00:07.000Z\",\n            \"modified_by\": null,\n            \"deleted_on\": null,\n            \"deleted_by\": null\n        },\n        {\n            \"id\": \"a1b92539-058b-4768-82fe-24d1a538ded6\",\n            \"account_number\": \"2208667061\",\n            \"currency\": \"NGN\",\n            \"amount\": \"100.00\",\n            \"balance\": \"426.56\",\n            \"reference\": \"\",\n            \"hash\": \"{\\\"account_number\\\":\\\"2208667061\\\",\\\"bank_code\\\":\\\"057\\\",\\\"amount\\\":100,\\\"balance\\\":426,\\\"type\\\":\\\"credit\\\",\\\"date\\\":\\\"2024-06-08T14:54:00Z\\\"}\",\n            \"status\": \"success\",\n            \"entry_type\": \"credit\",\n            \"narration\": \"NIP/ROLEZ/Transfer/Transfer to Adewunmi O Akinsanya/***7/AT5_MFDS655202406081555\",\n            \"transaction_date\": \"2024-06-08T14:55:29.000Z\",\n            \"transaction_type\": \"Credit\",\n            \"note\": null,\n            \"source\": \"email\",\n            \"provider\": \"google\",\n            \"bank\": {\n                \"id\": \"d645920e395fedad7bbbed0eca3fe2e0\",\n                \"name\": \"Zenith Bank\",\n                \"short_code\": \"057\",\n                \"long_code\": \"057\",\n                \"icon\": \"https://s3.us-east-2.amazonaws.com/kolo.finance/assets/zenithbank-logo-circle.png\"\n            },\n            \"created_on\": \"2024-06-08T14:59:37.607Z\",\n            \"created_by\": null,\n            \"modified_on\": \"2024-06-08T14:59:37.000Z\",\n            \"modified_by\": null,\n            \"deleted_on\": null,\n            \"deleted_by\": null\n        },\n        {\n            \"id\": \"456449b1-97be-4235-9003-4d45e023924b\",\n            \"account_number\": \"2208667061\",\n            \"currency\": \"NGN\",\n            \"amount\": \"100.00\",\n            \"balance\": \"333.89\",\n            \"reference\": \"\",\n            \"hash\": \"{\\\"account_number\\\":\\\"2208667061\\\",\\\"bank_code\\\":\\\"057\\\",\\\"amount\\\":100,\\\"balance\\\":333,\\\"type\\\":\\\"credit\\\",\\\"date\\\":\\\"2024-03-27T08:24:00Z\\\"}\",\n            \"status\": \"success\",\n            \"entry_type\": \"credit\",\n            \"narration\": \"NIP/ROLEZ/Transfer/Transfer to Adewunmi O Akinsanya/***70/AT5_MFDS92202403270924\",\n            \"transaction_date\": \"2024-03-27T08:25:01.000Z\",\n            \"transaction_type\": \"Credit\",\n            \"note\": null,\n            \"source\": \"email\",\n            \"provider\": \"google\",\n            \"bank\": {\n                \"id\": \"d645920e395fedad7bbbed0eca3fe2e0\",\n                \"name\": \"Zenith Bank\",\n                \"short_code\": \"057\",\n                \"long_code\": \"057\",\n                \"icon\": \"https://s3.us-east-2.amazonaws.com/kolo.finance/assets/zenithbank-logo-circle.png\"\n            },\n            \"created_on\": \"2024-04-12T15:08:28.485Z\",\n            \"created_by\": null,\n            \"modified_on\": \"2024-04-12T15:08:28.000Z\",\n            \"modified_by\": null,\n            \"deleted_on\": null,\n            \"deleted_by\": null\n        },\n        {\n            \"id\": \"1d86ac44-d61d-423a-8037-9ca0ce6b65ad\",\n            \"account_number\": \"2208667061\",\n            \"currency\": \"NGN\",\n            \"amount\": \"100.00\",\n            \"balance\": \"233.89\",\n            \"reference\": \"\",\n            \"hash\": \"{\\\"account_number\\\":\\\"2208667061\\\",\\\"bank_code\\\":\\\"057\\\",\\\"amount\\\":100,\\\"balance\\\":233,\\\"type\\\":\\\"credit\\\",\\\"date\\\":\\\"2024-03-10T21:03:00Z\\\"}\",\n            \"status\": \"success\",\n            \"entry_type\": \"credit\",\n            \"narration\": \"NIP/STBC/KREDI MONEY MICROFINANCE BANK LIMITED/090380/Transfer to Adewunmi O Aki\",\n            \"transaction_date\": \"2024-03-10T21:03:53.000Z\",\n            \"transaction_type\": \"Credit\",\n            \"note\": null,\n            \"source\": \"email\",\n            \"provider\": \"google\",\n            \"bank\": {\n                \"id\": \"d645920e395fedad7bbbed0eca3fe2e0\",\n                \"name\": \"Zenith Bank\",\n                \"short_code\": \"057\",\n                \"long_code\": \"057\",\n                \"icon\": \"https://s3.us-east-2.amazonaws.com/kolo.finance/assets/zenithbank-logo-circle.png\"\n            },\n            \"created_on\": \"2024-04-12T15:08:28.485Z\",\n            \"created_by\": null,\n            \"modified_on\": \"2024-04-12T15:08:28.000Z\",\n            \"modified_by\": null,\n            \"deleted_on\": null,\n            \"deleted_by\": null\n        },\n        {\n            \"id\": \"b5c1dd80-f28c-44be-9418-1cda44acd5c0\",\n            \"account_number\": \"2208667061\",\n            \"currency\": \"NGN\",\n            \"amount\": \"10.00\",\n            \"balance\": \"133.89\",\n            \"reference\": \"\",\n            \"hash\": \"{\\\"account_number\\\":\\\"2208667061\\\",\\\"bank_code\\\":\\\"057\\\",\\\"amount\\\":10,\\\"balance\\\":133,\\\"type\\\":\\\"credit\\\",\\\"date\\\":\\\"2024-03-10T16:21:00Z\\\"}\",\n            \"status\": \"success\",\n            \"entry_type\": \"credit\",\n            \"narration\": \"NIP/ROLEZ/Transfer/Transfer to Adewunmi O Akinsanya/***7/AT5_MFDS741202403101721\",\n            \"transaction_date\": \"2024-03-10T16:22:10.000Z\",\n            \"transaction_type\": \"Credit\",\n            \"note\": null,\n            \"source\": \"email\",\n            \"provider\": \"google\",\n            \"bank\": {\n                \"id\": \"d645920e395fedad7bbbed0eca3fe2e0\",\n                \"name\": \"Zenith Bank\",\n                \"short_code\": \"057\",\n                \"long_code\": \"057\",\n                \"icon\": \"https://s3.us-east-2.amazonaws.com/kolo.finance/assets/zenithbank-logo-circle.png\"\n            },\n            \"created_on\": \"2024-04-12T15:08:28.485Z\",\n            \"created_by\": null,\n            \"modified_on\": \"2024-04-12T15:08:28.000Z\",\n            \"modified_by\": null,\n            \"deleted_on\": null,\n            \"deleted_by\": null\n        },\n        {\n            \"id\": \"48225422-f6fe-4207-ab27-b97f7f756f30\",\n            \"account_number\": \"2208667061\",\n            \"currency\": \"NGN\",\n            \"amount\": \"1000.00\",\n            \"balance\": \"133.57\",\n            \"reference\": \"\",\n            \"hash\": \"{\\\"account_number\\\":\\\"2208667061\\\",\\\"bank_code\\\":\\\"057\\\",\\\"amount\\\":1000,\\\"balance\\\":133,\\\"type\\\":\\\"debit\\\",\\\"date\\\":\\\"2024-02-16T09:39:00Z\\\"}\",\n            \"status\": \"success\",\n            \"entry_type\": \"debit\",\n            \"narration\": \"Airtime//2348089722636//airtel\",\n            \"transaction_date\": \"2024-02-16T09:39:12.000Z\",\n            \"transaction_type\": \"Airtime\",\n            \"note\": null,\n            \"source\": \"email\",\n            \"provider\": \"google\",\n            \"bank\": {\n                \"id\": \"d645920e395fedad7bbbed0eca3fe2e0\",\n                \"name\": \"Zenith Bank\",\n                \"short_code\": \"057\",\n                \"long_code\": \"057\",\n                \"icon\": \"https://s3.us-east-2.amazonaws.com/kolo.finance/assets/zenithbank-logo-circle.png\"\n            },\n            \"created_on\": \"2024-04-12T15:08:28.485Z\",\n            \"created_by\": null,\n            \"modified_on\": \"2024-04-12T15:08:28.000Z\",\n            \"modified_by\": null,\n            \"deleted_on\": null,\n            \"deleted_by\": null\n        },\n        {\n            \"id\": \"2c69b94b-81a3-46e4-8309-1198172a0de9\",\n            \"account_number\": \"2208667061\",\n            \"currency\": \"NGN\",\n            \"amount\": \"100.00\",\n            \"balance\": \"1133.57\",\n            \"reference\": \"\",\n            \"hash\": \"{\\\"account_number\\\":\\\"2208667061\\\",\\\"bank_code\\\":\\\"057\\\",\\\"amount\\\":100,\\\"balance\\\":1133,\\\"type\\\":\\\"credit\\\",\\\"date\\\":\\\"2024-02-15T23:39:00Z\\\"}\",\n            \"status\": \"success\",\n            \"entry_type\": \"credit\",\n            \"narration\": \"NIP/ROLEZ/Transfer/Transfer to Adewunmi O Akinsanya/***7/AT5_MFDS402202402160035\",\n            \"transaction_date\": \"2024-02-15T23:37:58.000Z\",\n            \"transaction_type\": \"Credit\",\n            \"note\": null,\n            \"source\": \"email\",\n            \"provider\": \"google\",\n            \"bank\": {\n                \"id\": \"d645920e395fedad7bbbed0eca3fe2e0\",\n                \"name\": \"Zenith Bank\",\n                \"short_code\": \"057\",\n                \"long_code\": \"057\",\n                \"icon\": \"https://s3.us-east-2.amazonaws.com/kolo.finance/assets/zenithbank-logo-circle.png\"\n            },\n            \"created_on\": \"2024-04-12T15:08:28.485Z\",\n            \"created_by\": null,\n            \"modified_on\": \"2024-04-12T15:08:28.000Z\",\n            \"modified_by\": null,\n            \"deleted_on\": null,\n            \"deleted_by\": null\n        },\n        {\n            \"id\": \"1f06206a-43c2-4dfe-a308-297022a61f74\",\n            \"account_number\": \"2208667061\",\n            \"currency\": \"NGN\",\n            \"amount\": \"100.00\",\n            \"balance\": \"1033.57\",\n            \"reference\": \"\",\n            \"hash\": \"{\\\"account_number\\\":\\\"2208667061\\\",\\\"bank_code\\\":\\\"057\\\",\\\"amount\\\":100,\\\"balance\\\":1033,\\\"type\\\":\\\"credit\\\",\\\"date\\\":\\\"2024-02-06T18:33:00Z\\\"}\",\n            \"status\": \"success\",\n            \"entry_type\": \"credit\",\n            \"narration\": \"NIP/STLB/ADEWUNMI AKINSANYA/Transfer from ADEWUNMI AKINSANYA to ADEWUNMI O AKINS\",\n            \"transaction_date\": \"2024-02-06T18:33:44.000Z\",\n            \"transaction_type\": \"Credit\",\n            \"note\": null,\n            \"source\": \"email\",\n            \"provider\": \"google\",\n            \"bank\": {\n                \"id\": \"d645920e395fedad7bbbed0eca3fe2e0\",\n                \"name\": \"Zenith Bank\",\n                \"short_code\": \"057\",\n                \"long_code\": \"057\",\n                \"icon\": \"https://s3.us-east-2.amazonaws.com/kolo.finance/assets/zenithbank-logo-circle.png\"\n            },\n            \"created_on\": \"2024-04-12T15:08:28.485Z\",\n            \"created_by\": null,\n            \"modified_on\": \"2024-04-12T15:08:28.000Z\",\n            \"modified_by\": null,\n            \"deleted_on\": null,\n            \"deleted_by\": null\n        },\n        {\n            \"id\": \"cb690351-de1c-4053-bc8c-b5298281c808\",\n            \"account_number\": \"2208667061\",\n            \"currency\": \"NGN\",\n            \"amount\": \"50.00\",\n            \"balance\": \"963.51\",\n            \"reference\": \"\",\n            \"hash\": \"{\\\"account_number\\\":\\\"2208667061\\\",\\\"bank_code\\\":\\\"057\\\",\\\"amount\\\":50,\\\"balance\\\":963,\\\"type\\\":\\\"credit\\\",\\\"date\\\":\\\"2024-01-11T08:33:00Z\\\"}\",\n            \"status\": \"success\",\n            \"entry_type\": \"credit\",\n            \"narration\": \"NIP/ROLEZ/Transfer/Transfer to Adewunmi O Akinsanya/***7/AT5_MFDS963202401110932\",\n            \"transaction_date\": \"2024-01-11T08:32:46.000Z\",\n            \"transaction_type\": \"Credit\",\n            \"note\": null,\n            \"source\": \"email\",\n            \"provider\": \"google\",\n            \"bank\": {\n                \"id\": \"d645920e395fedad7bbbed0eca3fe2e0\",\n                \"name\": \"Zenith Bank\",\n                \"short_code\": \"057\",\n                \"long_code\": \"057\",\n                \"icon\": \"https://s3.us-east-2.amazonaws.com/kolo.finance/assets/zenithbank-logo-circle.png\"\n            },\n            \"created_on\": \"2024-04-12T15:08:28.485Z\",\n            \"created_by\": null,\n            \"modified_on\": \"2024-04-12T15:08:28.000Z\",\n            \"modified_by\": null,\n            \"deleted_on\": null,\n            \"deleted_by\": null\n        },\n        {\n            \"id\": \"5d0d4d61-e044-444d-970b-e89e399482ef\",\n            \"account_number\": \"2208667061\",\n            \"currency\": \"NGN\",\n            \"amount\": \"100.00\",\n            \"balance\": \"819.44\",\n            \"reference\": \"\",\n            \"hash\": \"{\\\"account_number\\\":\\\"2208667061\\\",\\\"bank_code\\\":\\\"057\\\",\\\"amount\\\":100,\\\"balance\\\":819,\\\"type\\\":\\\"credit\\\",\\\"date\\\":\\\"2023-11-29T21:27:00Z\\\"}\",\n            \"status\": \"success\",\n            \"entry_type\": \"credit\",\n            \"narration\": \"NIP/KUDA/ADEWUNMI OLADIPUPO AKINSANYA/TEST\",\n            \"transaction_date\": \"2023-11-29T21:27:30.000Z\",\n            \"transaction_type\": \"Credit\",\n            \"note\": null,\n            \"source\": \"email\",\n            \"provider\": \"google\",\n            \"bank\": {\n                \"id\": \"d645920e395fedad7bbbed0eca3fe2e0\",\n                \"name\": \"Zenith Bank\",\n                \"short_code\": \"057\",\n                \"long_code\": \"057\",\n                \"icon\": \"https://s3.us-east-2.amazonaws.com/kolo.finance/assets/zenithbank-logo-circle.png\"\n            },\n            \"created_on\": \"2024-04-12T15:08:28.485Z\",\n            \"created_by\": null,\n            \"modified_on\": \"2024-04-12T15:08:28.000Z\",\n            \"modified_by\": null,\n            \"deleted_on\": null,\n            \"deleted_by\": null\n        },\n        {\n            \"id\": \"4aab533c-e467-44c5-bcbc-fed5e64d7f96\",\n            \"account_number\": \"2208667061\",\n            \"currency\": \"NGN\",\n            \"amount\": \"100.00\",\n            \"balance\": \"719.44\",\n            \"reference\": \"\",\n            \"hash\": \"{\\\"account_number\\\":\\\"2208667061\\\",\\\"bank_code\\\":\\\"057\\\",\\\"amount\\\":100,\\\"balance\\\":719,\\\"type\\\":\\\"credit\\\",\\\"date\\\":\\\"2023-11-29T20:54:00Z\\\"}\",\n            \"status\": \"success\",\n            \"entry_type\": \"credit\",\n            \"narration\": \"NIP/KUDA/ADEWUNMI OLADIPUPO AKINSANYA/TEST\",\n            \"transaction_date\": \"2023-11-29T20:54:50.000Z\",\n            \"transaction_type\": \"Credit\",\n            \"note\": null,\n            \"source\": \"email\",\n            \"provider\": \"google\",\n            \"bank\": {\n                \"id\": \"d645920e395fedad7bbbed0eca3fe2e0\",\n                \"name\": \"Zenith Bank\",\n                \"short_code\": \"057\",\n                \"long_code\": \"057\",\n                \"icon\": \"https://s3.us-east-2.amazonaws.com/kolo.finance/assets/zenithbank-logo-circle.png\"\n            },\n            \"created_on\": \"2024-04-12T15:08:28.485Z\",\n            \"created_by\": null,\n            \"modified_on\": \"2024-04-12T15:08:28.000Z\",\n            \"modified_by\": null,\n            \"deleted_on\": null,\n            \"deleted_by\": null\n        },\n        {\n            \"id\": \"da46acdf-c6ac-4e3d-bb36-8881aa1d9cdc\",\n            \"account_number\": \"2208667061\",\n            \"currency\": \"NGN\",\n            \"amount\": \"100.00\",\n            \"balance\": \"623.44\",\n            \"reference\": \"\",\n            \"hash\": \"{\\\"account_number\\\":\\\"2208667061\\\",\\\"bank_code\\\":\\\"057\\\",\\\"amount\\\":100,\\\"balance\\\":623,\\\"type\\\":\\\"credit\\\",\\\"date\\\":\\\"2023-11-21T10:42:00Z\\\"}\",\n            \"status\": \"success\",\n            \"entry_type\": \"credit\",\n            \"narration\": \"NIP/KUDA/ADEWUNMI OLADIPUPO AKINSANYA/TEST AGAIN\",\n            \"transaction_date\": \"2023-11-21T10:42:50.000Z\",\n            \"transaction_type\": \"Credit\",\n            \"note\": null,\n            \"source\": \"email\",\n            \"provider\": \"google\",\n            \"bank\": {\n                \"id\": \"d645920e395fedad7bbbed0eca3fe2e0\",\n                \"name\": \"Zenith Bank\",\n                \"short_code\": \"057\",\n                \"long_code\": \"057\",\n                \"icon\": \"https://s3.us-east-2.amazonaws.com/kolo.finance/assets/zenithbank-logo-circle.png\"\n            },\n            \"created_on\": \"2024-04-12T15:08:28.485Z\",\n            \"created_by\": null,\n            \"modified_on\": \"2024-04-12T15:08:28.000Z\",\n            \"modified_by\": null,\n            \"deleted_on\": null,\n            \"deleted_by\": null\n        },\n        {\n            \"id\": \"a0d7dbf7-6387-4c5c-8271-8e42d14c5501\",\n            \"account_number\": \"2208667061\",\n            \"currency\": \"NGN\",\n            \"amount\": \"100.00\",\n            \"balance\": \"525.36\",\n            \"reference\": \"\",\n            \"hash\": \"{\\\"account_number\\\":\\\"2208667061\\\",\\\"bank_code\\\":\\\"057\\\",\\\"amount\\\":100,\\\"balance\\\":525,\\\"type\\\":\\\"credit\\\",\\\"date\\\":\\\"2023-10-13T23:45:00Z\\\"}\",\n            \"status\": \"success\",\n            \"entry_type\": \"credit\",\n            \"narration\": \"NIP/STBC/KREDI MONEY MICROFINANCE BANK LIMITED/090380/Transfer to ADEWUNMI O AKI\",\n            \"transaction_date\": \"2023-10-13T23:44:00.000Z\",\n            \"transaction_type\": \"Credit\",\n            \"note\": null,\n            \"source\": \"email\",\n            \"provider\": \"google\",\n            \"bank\": {\n                \"id\": \"d645920e395fedad7bbbed0eca3fe2e0\",\n                \"name\": \"Zenith Bank\",\n                \"short_code\": \"057\",\n                \"long_code\": \"057\",\n                \"icon\": \"https://s3.us-east-2.amazonaws.com/kolo.finance/assets/zenithbank-logo-circle.png\"\n            },\n            \"created_on\": \"2024-04-12T15:08:28.485Z\",\n            \"created_by\": null,\n            \"modified_on\": \"2024-04-12T15:08:28.000Z\",\n            \"modified_by\": null,\n            \"deleted_on\": null,\n            \"deleted_by\": null\n        }\n    ],\n    \"meta\": {\n        \"cost\": 0,\n        \"balance\": 585\n    }\n}"
						}
					]
				},
				{
					"name": "Get Transaction",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-access-token",
								"value": "{{x_access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}kolo/transactions/:id",
							"host": [
								"{{base_url}}kolo"
							],
							"path": [
								"transactions",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "c954f391-83a6-4265-bf7a-e9e1d2db5013"
								}
							]
						},
						"description": "Use this endpoint with a unique transaction identifier to get a single transaction for an authenticated customer."
					},
					"response": [
						{
							"name": "Get Transaction",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-access-token",
										"value": "{{x_access_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}kolo/transactions/:id",
									"host": [
										"{{base_url}}kolo"
									],
									"path": [
										"transactions",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "c954f391-83a6-4265-bf7a-e9e1d2db5013"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "X-Request-ID",
									"value": "c99e9563-43ea-4ed1-bc17-389ace9bf87c"
								},
								{
									"key": "Last-Modified",
									"value": "Thu, 20 Jun 2024 14:16:34 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "981"
								},
								{
									"key": "ETag",
									"value": "W/\"3d5-NGVm4vZe4JS0ue7xFxrWIWwsjx4\""
								},
								{
									"key": "Date",
									"value": "Thu, 20 Jun 2024 14:16:38 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"success\",\n    \"data\": {\n        \"id\": \"c954f391-83a6-4265-bf7a-e9e1d2db5013\",\n        \"account_number\": \"2208667061\",\n        \"currency\": \"NGN\",\n        \"amount\": \"10.00\",\n        \"balance\": \"436.56\",\n        \"reference\": \"\",\n        \"hash\": \"{\\\"account_number\\\":\\\"2208667061\\\",\\\"bank_code\\\":\\\"057\\\",\\\"amount\\\":10,\\\"balance\\\":436,\\\"type\\\":\\\"credit\\\",\\\"date\\\":\\\"2024-06-08T15:03:00Z\\\"}\",\n        \"status\": \"success\",\n        \"entry_type\": \"credit\",\n        \"narration\": \"NIP/ROLEZ/Transfer/Transfer to Adewunmi O Akinsanya/***7/AT5_MFDS110202406081601\",\n        \"transaction_date\": \"2024-06-08T15:02:10.000Z\",\n        \"transaction_type\": \"Credit\",\n        \"note\": null,\n        \"source\": \"email\",\n        \"provider\": \"google\",\n        \"categories\": [],\n        \"bank\": {\n            \"id\": \"d645920e395fedad7bbbed0eca3fe2e0\",\n            \"name\": \"Zenith Bank\",\n            \"short_code\": \"057\",\n            \"long_code\": \"057\",\n            \"icon\": \"https://s3.us-east-2.amazonaws.com/kolo.finance/assets/zenithbank-logo-circle.png\"\n        },\n        \"created_on\": \"2024-06-14T19:00:07.070Z\",\n        \"created_by\": null,\n        \"modified_on\": \"2024-06-14T19:00:07.000Z\",\n        \"modified_by\": null,\n        \"deleted_on\": null,\n        \"deleted_by\": null\n    },\n    \"meta\": {\n        \"cost\": 0,\n        \"balance\": 585\n    }\n}"
						}
					]
				},
				{
					"name": "Update Transaction",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "x-access-token",
								"value": "{{x_access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"note\": \"Updated by API\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}kolo/transactions/:id",
							"host": [
								"{{base_url}}kolo"
							],
							"path": [
								"transactions",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "c954f391-83a6-4265-bf7a-e9e1d2db5013"
								}
							]
						},
						"description": "Use this endpoint to update the details of a transaction using the unique identifier of the transaction."
					},
					"response": []
				},
				{
					"name": "List Bank Accounts",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-access-token",
								"value": "{{x_access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}kolo/bank-accounts",
							"host": [
								"{{base_url}}kolo"
							],
							"path": [
								"bank-accounts"
							]
						},
						"description": "Use this endpoint to get all the bank accounts of an authenticated user."
					},
					"response": [
						{
							"name": "List Bank Accounts",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-access-token",
										"value": "{{x_access_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}kolo/bank-accounts",
									"host": [
										"{{base_url}}kolo"
									],
									"path": [
										"bank-accounts"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "X-Request-ID",
									"value": "a87040a9-22aa-4e18-808e-7945a6c62754"
								},
								{
									"key": "Last-Modified",
									"value": "Thu, 20 Jun 2024 14:17:21 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "714"
								},
								{
									"key": "ETag",
									"value": "W/\"2ca-gPZE9AF1kgKZM+GHN3nVUwxuLd8\""
								},
								{
									"key": "Date",
									"value": "Thu, 20 Jun 2024 14:17:23 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"success\",\n    \"data\": [\n        {\n            \"id\": \"6412961b-bf28-4096-9391-6dc899ab3032\",\n            \"account_name\": \"Adewunmi O Akinsanya\",\n            \"account_number\": \"2208667061\",\n            \"balance\": \"436.56\",\n            \"currency\": \"NGN\",\n            \"last_balance_time\": \"2024-06-08T15:02:10.000Z\",\n            \"last_synced\": \"2024-06-14T19:00:07.000Z\",\n            \"data_source\": [\n                \"email\"\n            ],\n            \"description\": \"Autodiscovered by Kolo\",\n            \"bank\": {\n                \"id\": \"d645920e395fedad7bbbed0eca3fe2e0\",\n                \"name\": \"Zenith Bank\",\n                \"short_code\": \"057\",\n                \"long_code\": \"057\",\n                \"icon\": \"https://s3.us-east-2.amazonaws.com/kolo.finance/assets/zenithbank-logo-circle.png\"\n            },\n            \"created_on\": \"2024-04-12T13:29:31.782Z\",\n            \"created_by\": null,\n            \"modified_on\": \"2024-06-14T19:00:07.000Z\",\n            \"modified_by\": null,\n            \"deleted_on\": null,\n            \"deleted_by\": null\n        }\n    ],\n    \"meta\": {\n        \"cost\": 0,\n        \"balance\": 585\n    }\n}"
						}
					]
				},
				{
					"name": "Get Bank Account",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-access-token",
								"value": "{{x_access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}kolo/bank-accounts/:id",
							"host": [
								"{{base_url}}kolo"
							],
							"path": [
								"bank-accounts",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "6412961b-bf28-4096-9391-6dc899ab3032"
								}
							]
						},
						"description": "Use this endpoint to get a specific bank account of an authenticated user using the unique identifier of the bank account."
					},
					"response": [
						{
							"name": "Get Bank Account",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-access-token",
										"value": "{{x_access_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}kolo/bank-accounts/:id",
									"host": [
										"{{base_url}}kolo"
									],
									"path": [
										"bank-accounts",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "6412961b-bf28-4096-9391-6dc899ab3032"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "X-Request-ID",
									"value": "edeb094b-8a91-4e1b-8053-a90a763bcc37"
								},
								{
									"key": "Last-Modified",
									"value": "Thu, 20 Jun 2024 14:18:05 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "712"
								},
								{
									"key": "ETag",
									"value": "W/\"2c8-gZIC1IX58/OqVd6iXQOmoXUiCxg\""
								},
								{
									"key": "Date",
									"value": "Thu, 20 Jun 2024 14:18:09 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"success\",\n    \"data\": {\n        \"id\": \"6412961b-bf28-4096-9391-6dc899ab3032\",\n        \"account_name\": \"Adewunmi O Akinsanya\",\n        \"account_number\": \"2208667061\",\n        \"balance\": \"436.56\",\n        \"currency\": \"NGN\",\n        \"last_balance_time\": \"2024-06-08T15:02:10.000Z\",\n        \"last_synced\": \"2024-06-14T19:00:07.000Z\",\n        \"data_source\": [\n            \"email\"\n        ],\n        \"description\": \"Autodiscovered by Kolo\",\n        \"bank\": {\n            \"id\": \"d645920e395fedad7bbbed0eca3fe2e0\",\n            \"name\": \"Zenith Bank\",\n            \"short_code\": \"057\",\n            \"long_code\": \"057\",\n            \"icon\": \"https://s3.us-east-2.amazonaws.com/kolo.finance/assets/zenithbank-logo-circle.png\"\n        },\n        \"created_on\": \"2024-04-12T13:29:31.782Z\",\n        \"created_by\": null,\n        \"modified_on\": \"2024-06-14T19:00:07.000Z\",\n        \"modified_by\": null,\n        \"deleted_on\": null,\n        \"deleted_by\": null\n    },\n    \"meta\": {\n        \"cost\": 0,\n        \"balance\": 585\n    }\n}"
						}
					]
				},
				{
					"name": "Get Profile",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-access-token",
								"value": "{{x_access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}kolo/profile",
							"host": [
								"{{base_url}}kolo"
							],
							"path": [
								"profile"
							]
						},
						"description": "Use this endpoint to retrieve the profile information of an authenticated user."
					},
					"response": []
				},
				{
					"name": "Add Bank Account",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-access-token",
								"value": "{{x_access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"bank_id\": null,\n    \"description\": \"\",\n    \"account_number\": \"\",\n    \"data_source\": [\"email\", \"sms\", \"bank\"],\n    \"currency\": \"NGN\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}kolo/bank-accounts",
							"host": [
								"{{base_url}}kolo"
							],
							"path": [
								"bank-accounts"
							]
						},
						"description": "Use this endpoint to add a new bank account for an authenticated user."
					},
					"response": []
				},
				{
					"name": "Sync Bank Account",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-access-token",
								"value": "{{x_access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}kolo/bank-accounts/sync",
							"host": [
								"{{base_url}}kolo"
							],
							"path": [
								"bank-accounts",
								"sync"
							]
						},
						"description": "Use this endpoint to sync a bank account to update its information. To do this, you will need the unique identifier of the the bank account."
					},
					"response": []
				},
				{
					"name": "Update Bank Account",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "x-access-token",
								"value": "{{x_access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"description\": \"Testing\",\n    \"account_number\": \"2208667061\",\n    \"data_source\": [\n        \"email\",\n        \"sms\",\n        \"bank\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}kolo/bank-accounts/:id",
							"host": [
								"{{base_url}}kolo"
							],
							"path": [
								"bank-accounts",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "6412961b-bf28-4096-9391-6dc899ab3032"
								}
							]
						},
						"description": "Use this endpoint to update the bank account of an authenticated user using it's unique identifier."
					},
					"response": [
						{
							"name": "Update Bank Account",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "x-access-token",
										"value": "{{x_access_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"Testing\",\n    \"account_number\": \"2208667061\",\n    \"data_source\": [\n        \"email\",\n        \"sms\",\n        \"bank\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}kolo/bank-accounts/:id",
									"host": [
										"{{base_url}}kolo"
									],
									"path": [
										"bank-accounts",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "6412961b-bf28-4096-9391-6dc899ab3032"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "X-Request-ID",
									"value": "c7bea6c7-1255-4f5f-8584-18004771e81d"
								},
								{
									"key": "Last-Modified",
									"value": "Thu, 20 Jun 2024 14:27:35 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "512"
								},
								{
									"key": "ETag",
									"value": "W/\"200-UhBtZqvLbr0i7NBAEYKUWtbSmFg\""
								},
								{
									"key": "Date",
									"value": "Thu, 20 Jun 2024 14:27:38 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"success\",\n    \"data\": {\n        \"id\": \"6412961b-bf28-4096-9391-6dc899ab3032\",\n        \"account_name\": \"Adewunmi O Akinsanya\",\n        \"account_number\": \"2208667061\",\n        \"balance\": \"436.56\",\n        \"currency\": \"NGN\",\n        \"last_balance_time\": \"2024-06-08T15:02:10.000Z\",\n        \"last_synced\": \"2024-06-14T19:00:07.000Z\",\n        \"data_source\": [\n            \"email\",\n            \"sms\",\n            \"bank\"\n        ],\n        \"description\": \"Testing\",\n        \"created_on\": \"2024-04-12T13:29:31.782Z\",\n        \"created_by\": null,\n        \"modified_on\": \"2024-06-14T19:00:07.000Z\",\n        \"modified_by\": null,\n        \"deleted_on\": null,\n        \"deleted_by\": null\n    },\n    \"meta\": {\n        \"cost\": 0,\n        \"balance\": 585\n    }\n}"
						}
					]
				},
				{
					"name": "Delete Bank Account",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "x-access-token",
								"value": "{{x_access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}kolo/bank-accounts/:id",
							"host": [
								"{{base_url}}kolo"
							],
							"path": [
								"bank-accounts",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "6412961b-bf28-4096-9391-6dc899ab3032"
								}
							]
						},
						"description": "Use this endpoint to delete a specific bank account from the user's profile."
					},
					"response": [
						{
							"name": "Delete Bank Account",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "x-access-token",
										"value": "{{x_access_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}kolo/bank-accounts/:id",
									"host": [
										"{{base_url}}kolo"
									],
									"path": [
										"bank-accounts",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "6412961b-bf28-4096-9391-6dc899ab3032"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "X-Request-ID",
									"value": "76becb60-b7e8-448e-aada-962864fb628a"
								},
								{
									"key": "Last-Modified",
									"value": "Thu, 20 Jun 2024 14:27:59 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "62"
								},
								{
									"key": "ETag",
									"value": "W/\"3e-az9L1kBMghnzvIrHYAC/QjGUpBw\""
								},
								{
									"key": "Date",
									"value": "Thu, 20 Jun 2024 14:28:03 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"success\",\n    \"data\": {},\n    \"meta\": {\n        \"cost\": 0,\n        \"balance\": 585\n    }\n}"
						}
					]
				}
			],
			"description": "### Introduction\n\n[Kolo](https://lsq.li/kolo?s=documentation) is a financial management application that consolidates all your bank accounts into a single platform. With Kolo, users can view balances, transactions, categorize spending, and much more. Our API extends these functionalities, allowing developers to integrate Kolo’s features into their applications. This API enables the tracking of bank balances and transactions, giving you a glimpse of your customers financial health.\n\n### Getting Started\n\nTo use the Kolo API, customers need to:\n\n1. **Create an Account**: Users must sign up for an account with [Kolo](https://lsq.li/kolo-app?s=documentation).\n    \n2. **Grant Permissions**: Users need to authorize the API to access their bank account information.\n    \n\n### Authentication\n\nThe Kolo API uses OAuth 2.0 for authentication. Ensure that you have valid credentials and have completed the necessary authorization steps to interact with the endpoints."
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{access_token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "https://adjutor.lendsqr.com/v2/",
			"type": "string"
		},
		{
			"key": "access_token",
			"value": "",
			"type": "string"
		},
		{
			"key": "access_token",
			"value": "",
			"type": "string",
			"disabled": true
		},
		{
			"key": "x_access_token",
			"value": "",
			"type": "string"
		}
	]
}